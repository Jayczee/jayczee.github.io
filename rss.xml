<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://jayczee.cn/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://jayczee.cn/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Jayczee&amp;apos;s Blog</title>
    <link>https://jayczee.cn/</link>
    <description>Whispering for nothing</description>
    <language>zh-CN</language>
    <pubDate>Wed, 05 Mar 2025 08:55:12 GMT</pubDate>
    <lastBuildDate>Wed, 05 Mar 2025 08:55:12 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>LeetCode</category>
    <category>NAS</category>
    <category>学习笔记</category>
    <category>Windows</category>
    <category>Linux</category>
    <category>爬虫</category>
    <category>fedex</category>
    <category>python</category>
    <item>
      <title>055 跳跃游戏</title>
      <link>https://jayczee.cn/note/leet150/9-leet055.html</link>
      <guid>https://jayczee.cn/note/leet150/9-leet055.html</guid>
      <source url="https://jayczee.cn/rss.xml">055 跳跃游戏</source>
      <description>🔗 相关链接 无 📜 题目描述 给定一个非负整数数组 nums，最初位于数组的第一个下标。数组中的每个元素代表在该位置可以跳跃的最大长度。 🎯 目标 判断是否能够到达最后一个下标。如果可以，返回 true；否则，返回 false。 📊 示例 示例 1 输入： 输出： 解释： 可以先跳 1 步，从下标 0 到达下标 1，然后再从下标 1 跳 3 ...</description>
      <category>LeetCode</category>
      <pubDate>Wed, 05 Mar 2025 08:52:19 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p>无</p>
<h2>📜 题目描述</h2>
<p>给定一个非负整数数组 <code>nums</code>，最初位于数组的第一个下标。数组中的每个元素代表在该位置可以跳跃的最大长度。</p>
<h2>🎯 目标</h2>
<p>判断是否能够到达最后一个下标。如果可以，返回 <code>true</code>；否则，返回 <code>false</code>。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [2, 3, 1, 1, 4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
可以先跳 1 步，从下标 0 到达下标 1，然后再从下标 1 跳 3 步到达最后一个下标。</p>
]]></content:encoded>
    </item>
    <item>
      <title>122 买卖股票的最佳时机 II</title>
      <link>https://jayczee.cn/note/leet150/8-leet122.html</link>
      <guid>https://jayczee.cn/note/leet150/8-leet122.html</guid>
      <source url="https://jayczee.cn/rss.xml">122 买卖股票的最佳时机 II</source>
      <description>🔗 相关链接 买卖股票的最佳时机 II 📜 股票交易最大利润 给定一个整数数组 prices，其中 prices[i] 表示某支股票第 i 天的价格。在每一天，可以决定是否购买和/或出售股票。注意，在任何时候最多只能持有一股股票，也可以选择在同一天买入并出售。 🎯 目标 返回能够获得的最大利润。 📊 示例 示例 1 输入： 输出： 解释： 在第...</description>
      <category>LeetCode</category>
      <pubDate>Tue, 04 Mar 2025 03:18:39 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">买卖股票的最佳时机 II</a></p>
<h2>📜 股票交易最大利润</h2>
<p>给定一个整数数组 <code>prices</code>，其中 <code>prices[i]</code> 表示某支股票第 <code>i</code> 天的价格。在每一天，可以决定是否购买和/或出售股票。注意，在任何时候最多只能持有一股股票，也可以选择在同一天买入并出售。</p>
<h2>🎯 目标</h2>
<p>返回能够获得的最大利润。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>prices = [7,1,5,3,6,4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>7</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong></p>
<ul>
<li>在第 2 天（股票价格 = 1）时买入，在第 3 天（股票价格 = 5）时卖出，获得利润 = 5 - 1 = 4。</li>
<li>随后，在第 4 天（股票价格 = 3）时买入，在第 5 天（股票价格 = 6）时卖出，获得利润 = 6 - 3 = 3。</li>
<li>最大总利润为 4 + 3 = 7。</li>
</ul>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>prices = [1,2,3,4,5]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>4</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong></p>
<ul>
<li>在第 1 天（股票价格 = 1）时买入，在第 5 天（股票价格 = 5）时卖出，获得利润 = 5 - 1 = 4。</li>
<li>最大总利润为 4。</li>
</ul>
<h3>示例 3</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>prices = [7,6,4,3,1]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong></p>
<ul>
<li>在这种情况下，无法获得正利润，因此不参与交易可以获得最大利润，最大利润为 0。</li>
</ul>
<h2>📝 提示</h2>
<ul>
<li><code>1 &lt;= prices.length &lt;= 3 * 10^4</code></li>
<li><code>0 &lt;= prices[i] &lt;= 10^4</code></li>
</ul>
<h2>💡 思路</h2>
<h3>动态规划</h3>
<p>由于在任何时候最多只能持有一种股票，那么在第n天交易结束时具有不持有股票和持有股票两种状态，即 <code>dp[n][0]</code> 和 <code>dp[n][1]</code>。 n从0开始计算。</p>
<p>不持有股票时，截止第n天所能获得的最大利润需要参考前一天的状态：</p>
<ul>
<li>若前一天 <code>n-1</code> 持有股票，第n天无股票，则为卖出股票，则 <code>dp[n][0] = dp[n-1][1] + price[n]</code>；</li>
<li>若前一天 <code>n-1</code> 不持有股票，第n天无股票，则为无操作，此时截止第n天所获的利润与第n-1天相同，即 <code>dp[n][0] = dp[n-1][0]</code>。</li>
</ul>
<p>持有股票时：</p>
<ul>
<li>若前一天 <code>n-1</code> 持有股票，第n天持有股票，则为无操作，则 <code>dp[n][1] = dp[n-1][1]</code>；</li>
<li>若前一天 <code>n-1</code> 不持有股票，第n天不持有股票，则为买入股票，则 <code>dp[n][1] = dp[n-1][0] - price[n]</code>。</li>
</ul>
<p>综上：</p>
<ul>
<li><code>dp[n][0] = max(dp[n-1][1] + price[n], dp[n-1][0])</code></li>
<li><code>dp[n][1] = max(dp[n-1][0] - price[n], dp[n-1][1])</code></li>
</ul>
<p>算出最后一天的 <code>dp[n][0]</code> 即可。</p>
<p>根据定义：<code>dp[0][0] = 0, dp[0][1] = -price[0]</code>。</p>
<h3>贪心</h3>
<p>由于交易次数不受限，所以计算每一个 <code>price[i] - price[i-1] &gt; 0</code> 的总和即可。</p>
<h2>💻 代码实现</h2>
<h3>动态规划</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxProfit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] prices) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[][] dp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">prices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> prices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            dp[i][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            dp[i][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">prices[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            dp[i][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dp[i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], dp[i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> prices[i]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            dp[i][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(dp[i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> prices[i], dp[i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> dp[</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">prices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>贪心</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxProfit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] prices) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sum </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> prices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> res </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prices[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prices[i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (res </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            sum </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>189 轮转数组</title>
      <link>https://jayczee.cn/note/leet150/6-leet189.html</link>
      <guid>https://jayczee.cn/note/leet150/6-leet189.html</guid>
      <source url="https://jayczee.cn/rss.xml">189 轮转数组</source>
      <description>原题链接 轮转数组轮转数组 问题描述 给定一个整数数组 nums，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。 示例 示例 1 输入: 输出: 解释: 向右轮转 1 步: [7,1,2,3,4,5,6] 向右轮转 2 步: [6,7,1,2,3,4,5] 向右轮转 3 步: [5,6,7,1,2,3,4] 示例 2 输入: 输出: 解释: ...</description>
      <category>LeetCode</category>
      <pubDate>Fri, 28 Feb 2025 10:13:54 GMT</pubDate>
      <content:encoded><![CDATA[<h2>原题链接</h2>
<figure><img src="https://leetcode.cn/problems/rotate-array/description/?envType=study-plan-v2&amp;envId=top-interview-150" alt="轮转数组" tabindex="0" loading="lazy"><figcaption>轮转数组</figcaption></figure>
<h2>问题描述</h2>
<p>给定一个整数数组 <code>nums</code>，将数组中的元素向右轮转 <code>k</code> 个位置，其中 <code>k</code> 是非负数。</p>
<h2>示例</h2>
<h3>示例 1</h3>
<p><strong>输入:</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [1,2,3,4,5,6,7], k = 3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出:</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[5,6,7,1,2,3,4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释:</strong></p>
<ul>
<li>向右轮转 1 步: <code>[7,1,2,3,4,5,6]</code></li>
<li>向右轮转 2 步: <code>[6,7,1,2,3,4,5]</code></li>
<li>向右轮转 3 步: <code>[5,6,7,1,2,3,4]</code></li>
</ul>
<h3>示例 2</h3>
<p><strong>输入:</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [-1,-100,3,99], k = 2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出:</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[3,99,-1,-100]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释:</strong></p>
<ul>
<li>向右轮转 1 步: <code>[99,-1,-100,3]</code></li>
<li>向右轮转 2 步: <code>[3,99,-1,-100]</code></li>
</ul>
<h2>提示</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>
<li><code>-2^31 &lt;= nums[i] &lt;= 2^31 - 1</code></li>
<li><code>0 &lt;= k &lt;= 10^5</code></li>
</ul>
<h2>进阶</h2>
<p>尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。你可以使用空间复杂度为 O(1) 的原地算法解决这个问题吗？</p>
<h2>思路</h2>
<ol>
<li>开辟额外数组空间,复制原数组，再将新数组中的元素放置到原数组下标+k的位置，超出长度从头开始计算。</li>
<li>环状替换，把第n个元素替换到n + k mod nums.length的位置，再将原来（n + k） mod nums.length替换到 （n + k + k）mod nums.length的位置，持续循环。每次替换完回到最初的n时，需要手动将n + 1(通过循环实现)，直到已替换的长度length == nums.length。</li>
<li>数组翻转，先翻转整个数组，再翻转[0,k-1]和[k, nums.length -1]，k = nums.length % k。</li>
</ol>
<h2>代码实现</h2>
<ol>
<li>开辟额外数组空间</li>
</ol>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> rotate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] arr </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copyOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(nums, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        nums[index] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> arr[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>环状替换</li>
</ol>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> rotate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> length </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> startLeft </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> length </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> startLeft</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> startLeft</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> right </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[left]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[right]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        do</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums[right] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> tmp1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            tmp1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">tmp2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> right</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            right </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            tmp2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[right]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            length </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(left </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> startLeft)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3">
<li>数组反转</li>
</ol>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> rotate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> actualK </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> actualK </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> actualK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> end) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (start </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> end) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> temp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[start]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums[start] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[end]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums[end] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> temp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://leetcode.cn/problems/rotate-array/description/?envType=study-plan-v2&amp;envId=top-interview-150" type="image/"/>
    </item>
    <item>
      <title>121 买卖股票的最佳时机</title>
      <link>https://jayczee.cn/note/leet150/7-leet121.html</link>
      <guid>https://jayczee.cn/note/leet150/7-leet121.html</guid>
      <source url="https://jayczee.cn/rss.xml">121 买卖股票的最佳时机</source>
      <description>🔗 相关链接 买卖股票的最佳时机 📜 题目描述 给定一个数组 prices，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。 你只能选择某一天买入这只股票，并选择在未来的某一个不同的日子卖出该股票。设计一个算法来计算你所能获取的最大利润。 返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。 📊 示...</description>
      <category>LeetCode</category>
      <pubDate>Fri, 28 Feb 2025 10:13:54 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">买卖股票的最佳时机</a></p>
<h2>📜 题目描述</h2>
<p>给定一个数组 <code>prices</code>，它的第 <code>i</code> 个元素 <code>prices[i]</code> 表示一支给定股票第 <code>i</code> 天的价格。</p>
<p>你只能选择某一天买入这只股票，并选择在未来的某一个不同的日子卖出该股票。设计一个算法来计算你所能获取的最大利润。</p>
<p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[7,1,5,3,6,4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>5</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6 - 1 = 5 。<br>
注意利润不能是 7 - 1 = 6，因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</p>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>prices = [7,6,4,3,1]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
在这种情况下，没有交易完成，所以最大利润为 0。</p>
<h2>📝 提示</h2>
<ul>
<li><code>1 &lt;= prices.length &lt;= 10^5</code></li>
<li><code>0 &lt;= prices[i] &lt;= 10^4</code></li>
</ul>
<h2>💡 思路</h2>
<p>遍历一遍数组，维护一个历史最低价格，每趟循环计算当前价格减历史最低价格的盈利，若大于之前得出max，则赋值给max。</p>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> maxProfit</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] prices) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">prices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> min </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prices[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> max </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> price </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> prices) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (min </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> price) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            min </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        max </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(price </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> min, max);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>169 多数元素</title>
      <link>https://jayczee.cn/note/leet150/5-leet169.html</link>
      <guid>https://jayczee.cn/note/leet150/5-leet169.html</guid>
      <source url="https://jayczee.cn/rss.xml">169 多数元素</source>
      <description>🔗 相关链接 多数元素 📜 题目描述 给定一个大小为 n 的数组 nums，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。 可以假设数组是非空的，并且给定的数组总是存在多数元素。 📊 示例 示例 1 输入： 输出： 示例 2 输入： 输出： 📝 提示 n == nums.length 1 &amp;lt;= n &amp;lt;= 5 *...</description>
      <category>LeetCode</category>
      <pubDate>Wed, 26 Feb 2025 03:13:33 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/majority-element/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">多数元素</a></p>
<h2>📜 题目描述</h2>
<p>给定一个大小为 <code>n</code> 的数组 <code>nums</code>，返回其中的多数元素。多数元素是指在数组中出现次数 <strong>大于 ⌊ n/2 ⌋</strong> 的元素。</p>
<p>可以假设数组是非空的，并且给定的数组总是存在多数元素。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [3,2,3]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [2,2,1,1,1,2,2]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>📝 提示</h2>
<ul>
<li><code>n == nums.length</code></li>
<li><code>1 &lt;= n &lt;= 5 * 10^4</code></li>
<li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li>
</ul>
<h2>🚀 进阶</h2>
<p>尝试设计时间复杂度为 O(n)、空间复杂度为 O(1) 的算法解决此问题。</p>
<h2>💡 思路</h2>
<h3>Boyer-Moore 投票算法</h3>
<p>引用题解评论区某个老哥的描述：</p>
<p>“同归于尽消杀法”：</p>
<p>由于多数超过50%，比如100个数，那么多数至少51个，剩下少数是49个。</p>
<p>第一个到来的士兵，直接插上自己阵营的旗帜占领这块高地，此时领主 <code>winner</code> 就是这个阵营的人，现存兵力 <code>count = 1</code>。</p>
<p>如果新来的士兵和前一个士兵是同一阵营，则集合起来占领高地，领主不变，<code>winner</code> 依然是当前这个士兵所属阵营，现存兵力 <code>count++</code>；</p>
<p>如果新来到的士兵不是同一阵营，则前方阵营派一个士兵和它同归于尽。此时前方阵营兵力 <code>count--</code>。（即使双方都死光，这块高地的旗帜 <code>winner</code> 依然不变，因为已经没有活着的士兵可以去换上自己的新旗帜）</p>
<p>当下一个士兵到来，发现前方阵营已经没有兵力，新士兵就成了领主，<code>winner</code> 变成这个士兵所属阵营的旗帜，现存兵力 <code>count++</code>。</p>
<p>就这样各路军阀一直以这种以一敌一同归于尽的方式厮杀下去，直到少数阵营都死光，那么最后剩下的几个必然属于多数阵营，<code>winner</code> 就是多数阵营。（多数阵营 51个，少数阵营只有49个，死剩下的2个就是多数阵营的人）</p>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> majorityElement</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> num){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>080 移除有序数组中的重复项 II</title>
      <link>https://jayczee.cn/note/leet150/4-leet080.html</link>
      <guid>https://jayczee.cn/note/leet150/4-leet080.html</guid>
      <source url="https://jayczee.cn/rss.xml">080 移除有序数组中的重复项 II</source>
      <description>🔗 相关链接 移除有序数组中的重复项 II 📜 题目描述 给定一个有序数组 nums，需要 原地 删除重复出现的元素，使得出现次数超过两次的元素只出现两次，返回删除后数组的新长度。不要使用额外的数组空间，必须在 原地 修改输入数组，并在使用 O(1) 额外空间的条件下完成。 说明 为什么返回数值是整数，但输出的答案是数组呢？ 请注意，输入数组是以「...</description>
      <category>LeetCode</category>
      <pubDate>Wed, 26 Feb 2025 02:54:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array-ii/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">移除有序数组中的重复项 II</a></p>
<h2>📜 题目描述</h2>
<p>给定一个有序数组 <code>nums</code>，需要 <strong>原地</strong> 删除重复出现的元素，使得出现次数超过两次的元素只出现两次，返回删除后数组的新长度。不要使用额外的数组空间，必须在 <strong>原地</strong> 修改输入数组，并在使用 O(1) 额外空间的条件下完成。</p>
<h3>说明</h3>
<p>为什么返回数值是整数，但输出的答案是数组呢？</p>
<p>请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>
<p>可以想象内部操作如下：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeDuplicates</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 在函数里修改输入数组对于调用者是可见的。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums[i])</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [1,1,1,2,2,3]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>5, nums = [1,1,2,2,3]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回新长度 <code>length = 5</code>，并且原数组的前五个元素被修改为 <code>1, 1, 2, 2, 3</code>。不需要考虑数组中超出新长度后面的元素。</p>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [0,0,1,1,1,1,2,3,3]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>7, nums = [0,0,1,1,2,3,3]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回新长度 <code>length = 7</code>，并且原数组的前七个元素被修改为 <code>0, 0, 1, 1, 2, 3, 3</code>。不需要考虑数组中超出新长度后面的元素。</p>
<h2>📝 提示</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li>
<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>
<li><code>nums</code> 已按升序排列</li>
</ul>
<h2>💡 思路</h2>
<p>对比<a href="/note/leet150/2-leet026.html" target="_blank">026 移除有序数组中的重复项</a>，该题难度上升在不能开辟额外的数组保存某个值是否达到删除的条件。根据题目，每个数字最多可以出现两次，即需要满足条件 <code>nums[i] == nums[i-1] == nums[i-2]</code> (i &gt;= 2)。</p>
<p>使用 <code>while</code> 循环和快慢指针遍历数组，初始化 <code>slow</code> 和 <code>fast</code> 为 2（数组长度小于 2 的条件不需要比较，可以直接返回）并比较 <code>nums[slow-2]</code> 与 <code>nums[fast]</code>，若不同则直接赋值。</p>
<p><code>nums[slow-2]</code> 表示已经被确定需要保留的值，即刚开始 <code>slow</code> 和 <code>fast</code> 都为 2 时，<code>0</code>（<code>slow-2</code>）为第一个确定需要保留的元素。若 <code>nums[slow-2]</code> 与 <code>nums[slow-1]</code> 相同，则 <code>nums[slow]</code> 不需要被保留。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><strong>LeetCode官方定义</strong><br>
我们定义两个指针 <code>slow</code> 和 <code>fast</code> 分别为慢指针和快指针，其中慢指针表示处理出的数组的长度，快指针表示已经检查过的数组的长度，即 <code>nums[fast]</code> 表示待检查的第一个元素，<code>nums[slow−1]</code> 为上一个应该被保留的元素所移动到的指定位置。</p>
<p>因为本题要求相同元素最多出现两次而非一次，所以我们需要检查上上个应该被保留的元素 <code>nums[slow−2]</code> 是否和当前待检查元素 <code>nums[fast]</code> 相同。当且仅当 <code>nums[slow−2]=nums[fast]</code> 时，当前待检查元素 <code>nums[fast]</code> 不应该被保留（因为此时必然有 <code>nums[slow−2]=nums[slow−1]=nums[fast]</code>）。最后，<code>slow</code> 即为处理好的数组的长度。</p>
</div>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeDuplicates</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> slow </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> fast </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (fast </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[slow </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[fast]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                nums[slow] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[fast]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                slow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            fast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> slow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>026 移除有序数组中的重复项</title>
      <link>https://jayczee.cn/note/leet150/3-leet026.html</link>
      <guid>https://jayczee.cn/note/leet150/3-leet026.html</guid>
      <source url="https://jayczee.cn/rss.xml">026 移除有序数组中的重复项</source>
      <description>🔗 相关链接 移除有序数组中的重复项 📜 题目描述 给定一个 非严格递增排列 的数组 nums，需要 原地 删除重复出现的元素，使每个元素只出现一次，返回删除后数组的新长度。元素的相对顺序应该保持一致。然后返回 nums 中唯一元素的个数。 考虑 nums 的唯一元素的数量为 k，需要执行以下操作： 更改数组 nums，使 nums 的前 k 个元...</description>
      <category>LeetCode</category>
      <pubDate>Tue, 25 Feb 2025 09:48:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">移除有序数组中的重复项</a></p>
<h2>📜 题目描述</h2>
<p>给定一个 <strong>非严格递增排列</strong> 的数组 <code>nums</code>，需要 <strong>原地</strong> 删除重复出现的元素，使每个元素只出现一次，返回删除后数组的新长度。元素的相对顺序应该保持一致。然后返回 <code>nums</code> 中唯一元素的个数。</p>
<p>考虑 <code>nums</code> 的唯一元素的数量为 <code>k</code>，需要执行以下操作：</p>
<ol>
<li>更改数组 <code>nums</code>，使 <code>nums</code> 的前 <code>k</code> 个元素包含唯一元素，并按照它们最初在 <code>nums</code> 中出现的顺序排列。</li>
<li><code>nums</code> 的其余元素与 <code>nums</code> 的大小不重要。</li>
<li>返回 <code>k</code>。</li>
</ol>
<h2>🧪 判题标准</h2>
<p>系统会用下面的代码来测试题解：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 输入数组</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] expectedNums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 长度正确的期望答案</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeDuplicates</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 调用</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">assert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> expectedNums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    assert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> expectedNums[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果所有的断言都通过，那么题解将会通过。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [1,1,2]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>2, nums = [1,2,_]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回新的长度 <code>2</code>，并且原数组 <code>nums</code> 的前两个元素被修改为 <code>1, 2</code>。不需要考虑数组中超出新长度后面的元素。</p>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [0,0,1,1,1,2,2,3,3,4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>5, nums = [0,1,2,3,4]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回新的长度 <code>5</code>，并且原数组 <code>nums</code> 的前五个元素被修改为 <code>0, 1, 2, 3, 4</code>。不需要考虑数组中超出新长度后面的元素。</p>
<h2>📝 提示</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li>
<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>
<li><code>nums</code> 已按 <strong>非严格递增</strong> 排列</li>
</ul>
<h2>💡 思路</h2>
<p>相较于<a href="/note/leet150/2-leet027.html" target="_blank">027 移除元素</a>，该题需要删除有序数组中的重复项，即要删除的元素是动态的，我们可以开辟一个数组，记录某值在之前的记录中是否出现过。其他的思路仍然像<a href="/note/leet150/2-leet027.html" target="_blank">027 移除元素</a>一样。</p>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeDuplicates</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">        boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20001</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> scanIndex </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> currentIndex </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> length </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (scanIndex </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">flag[nums[scanIndex] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10000</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                nums[currentIndex] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[scanIndex]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                flag[nums[scanIndex] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10000</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                currentIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            scanIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>027 移除元素</title>
      <link>https://jayczee.cn/note/leet150/2-leet027.html</link>
      <guid>https://jayczee.cn/note/leet150/2-leet027.html</guid>
      <source url="https://jayczee.cn/rss.xml">027 移除元素</source>
      <description>🔗 相关链接 移除元素 📜 题目描述 给定一个数组 nums 和一个值 val，需要 原地 移除所有数值等于 val 的元素。元素的顺序可能发生改变。然后返回 nums 中与 val 不同的元素的数量。 假设 nums 中不等于 val 的元素数量为 k，需要执行以下操作： 更改 nums 数组，使 nums 的前 k 个元素包含不等于 val 的...</description>
      <category>LeetCode</category>
      <pubDate>Tue, 25 Feb 2025 09:34:38 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 相关链接</h2>
<p><a href="https://leetcode.cn/problems/remove-element/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">移除元素</a></p>
<h2>📜 题目描述</h2>
<p>给定一个数组 <code>nums</code> 和一个值 <code>val</code>，需要 <strong>原地</strong> 移除所有数值等于 <code>val</code> 的元素。元素的顺序可能发生改变。然后返回 <code>nums</code> 中与 <code>val</code> 不同的元素的数量。</p>
<p>假设 <code>nums</code> 中不等于 <code>val</code> 的元素数量为 <code>k</code>，需要执行以下操作：</p>
<ol>
<li>更改 <code>nums</code> 数组，使 <code>nums</code> 的前 <code>k</code> 个元素包含不等于 <code>val</code> 的元素。</li>
<li><code>nums</code> 的其余元素和 <code>nums</code> 的大小并不重要。</li>
<li>返回 <code>k</code>。</li>
</ol>
<h2>🧪 用户评测</h2>
<p>评测机将使用以下代码测试解决方案：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] nums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 输入数组</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> val </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ...;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 要移除的值</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">[] expectedNums </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> [</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 长度正确的预期答案。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 它以不等于 val 的值排序。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> removeElement</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> val)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 调用你的实现</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">assert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> expectedNums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> k)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 排序 nums 的前 k 个元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> actualLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    assert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> expectedNums[i]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果所有的断言都通过，解决方案将会通过。</p>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [3,2,2,3], val = 3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>2, nums = [2,2,,]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回 <code>k = 2</code>，并且 <code>nums</code> 中的前两个元素均为 <code>2</code>。返回的 <code>k</code> 个元素之外留下的内容并不重要（因此它们并不计入评测）。</p>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums = [0,1,2,2,3,0,4,2], val = 2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>5, nums = [0,1,4,0,3,,]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong><br>
函数应返回 <code>k = 5</code>，并且 <code>nums</code> 中的前五个元素为 <code>0,1,4,0,3</code>。注意这五个元素可以任意顺序返回。返回的 <code>k</code> 个元素之外留下的内容并不重要（因此它们并不计入评测）。</p>
<h2>📝 提示</h2>
<ul>
<li><code>0 &lt;= nums.length &lt;= 100</code></li>
<li><code>0 &lt;= nums[i] &lt;= 50</code></li>
<li><code>0 &lt;= val &lt;= 100</code></li>
</ul>
<h2>💡 思路</h2>
<p>使用快慢指针，两个指针都从头部开始遍历，慢指针指向当前位置，快指针指向扫描位置。快指针循环向前移动并比较当前位置的值是否等于移除值，若是则跳过，若不是则把当前位置值设置为扫描值，并把有效长度 +1。</p>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> slow </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> fast </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> length </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (fast </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums[fast] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> val) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        nums[slow] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums[fast]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        slow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    fast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">++;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>088 合并两个有序数组</title>
      <link>https://jayczee.cn/note/leet150/1-leet088.html</link>
      <guid>https://jayczee.cn/note/leet150/1-leet088.html</guid>
      <source url="https://jayczee.cn/rss.xml">088 合并两个有序数组</source>
      <description>🔗 原题链接 合并两个有序数组 📝 合并两个有序数组 给定两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n，分别表示 nums1 和 nums2 中的元素数目。 请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。 注意： 最终，合并后数组不应由函数返回，而是存储在数组 num...</description>
      <category>LeetCode</category>
      <pubDate>Tue, 25 Feb 2025 09:21:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🔗 原题链接</h2>
<p><a href="https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">合并两个有序数组</a></p>
<h2>📝 合并两个有序数组</h2>
<p>给定两个按 <strong>非递减顺序</strong> 排列的整数数组 <code>nums1</code> 和 <code>nums2</code>，另有两个整数 <code>m</code> 和 <code>n</code>，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目。</p>
<p>请你 <strong>合并</strong> <code>nums2</code> 到 <code>nums1</code> 中，使合并后的数组同样按 <strong>非递减顺序</strong> 排列。</p>
<blockquote>
<p><strong>注意：</strong> 最终，合并后数组不应由函数返回，而是存储在数组 <code>nums1</code> 中。为了应对这种情况，<code>nums1</code> 的初始长度为 <code>m + n</code>，其中前 <code>m</code> 个元素表示应合并的元素，后 <code>n</code> 个元素为 0，应忽略。<code>nums2</code> 的长度为 <code>n</code>。</p>
</blockquote>
<h2>📊 示例</h2>
<h3>示例 1</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums1 = [1, 2, 3, 0, 0, 0], m = 3</span></span>
<span class="line"><span>nums2 = [2, 5, 6], n = 3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[1, 2, 2, 3, 5, 6]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong> 需要合并 <code>[1, 2, 3]</code> 和 <code>[2, 5, 6]</code>。合并结果是 <code>[1, 2, 2, 3, 5, 6]</code>，其中斜体加粗标注的为 <code>nums1</code> 中的元素。</p>
<h3>示例 2</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums1 = [1], m = 1</span></span>
<span class="line"><span>nums2 = [], n = 0</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[1]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong> 需要合并 <code>[1]</code> 和 <code>[]</code>。合并结果是 <code>[1]</code>。</p>
<h3>示例 3</h3>
<p><strong>输入：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nums1 = [0], m = 0</span></span>
<span class="line"><span>nums2 = [1], n = 1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出：</strong></p>
<div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" data-title="plaintext" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[1]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><strong>解释：</strong> 需要合并的数组是 <code>[]</code> 和 <code>[1]</code>。合并结果是 <code>[1]</code>。注意，因为 <code>m = 0</code>，所以 <code>nums1</code> 中没有元素。<code>nums1</code> 中仅存的 0 仅仅是为了确保合并结果可以顺利存放到 <code>nums1</code> 中。</p>
<h2>🔍 提示</h2>
<ul>
<li><code>nums1.length == m + n</code></li>
<li><code>nums2.length == n</code></li>
<li><code>0 &lt;= m, n &lt;= 200</code></li>
<li><code>1 &lt;= m + n &lt;= 200</code></li>
<li><code>-10^9 &lt;= nums1[i], nums2[j] &lt;= 10^9</code></li>
</ul>
<h2>🚀 进阶</h2>
<p>你可以设计实现一个时间复杂度为 O(m + n) 的算法解决此问题吗？</p>
<h2>💡 思路</h2>
<p>l为<code>nums1</code>的有效元素末尾，r为<code>nums2</code>有效元素末尾，cur为<code>nums1</code>整个数组的末尾。当<code>nums1</code>和<code>nums2</code>都有元素时，即<code>l&gt;=0</code>且<code>r&gt;=0</code>时，比较<code>nums1[l]</code>和<code>nums2[r]</code>的大小，将其更大值放入<code>nums1[cur]</code>。并移动相关指针。当<code>nums1</code>没有元素，但<code>nums2</code>还有时，直接将<code>nums2</code>剩余元素放入<code>nums1</code>中<code>cur</code>及<code>cur</code>之前的位置。当<code>nums1</code>剩余元素，<code>nums2</code>没元素时，此时排序已经完成，直接不处理，返回即可。</p>
<h2>💻 代码实现</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> merge</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] nums2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> r </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> m </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> r </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> (nums1[l] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[r]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums1[cur] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums1[l]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            nums1[cur] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[r]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(r</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        nums1[cur] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> nums2[r]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">--;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Jellyfin 字幕显示方框</title>
      <link>https://jayczee.cn/nas/jellyfin-font.html</link>
      <guid>https://jayczee.cn/nas/jellyfin-font.html</guid>
      <source url="https://jayczee.cn/rss.xml">Jellyfin 字幕显示方框</source>
      <description>昨晚在准备观看一部下载好的电影时，经过一番准备终于开始播放。然而，才看了几分钟片头，第一句台词一出来，字幕竟然都是方框，真是令人扫兴😩。 这种情况之前也遇到过，在另一台NAS上，问题出在缺失中文字体，导致字幕显示错误。为了解决这个问题，需要为Jellyfin安装中文字体。 以下以广受欢迎的 Noto Sans 字体为例，这款字体在工作时的客户端页面中...</description>
      <category>NAS</category>
      <pubDate>Tue, 25 Feb 2025 07:52:34 GMT</pubDate>
      <content:encoded><![CDATA[<p>昨晚在准备观看一部下载好的电影时，经过一番准备终于开始播放。然而，才看了几分钟片头，第一句台词一出来，字幕竟然都是方框，真是令人扫兴😩。</p>
<p>这种情况之前也遇到过，在另一台NAS上，问题出在缺失中文字体，导致字幕显示错误。为了解决这个问题，需要为Jellyfin安装中文字体。</p>
<p>以下以广受欢迎的 <strong>Noto Sans</strong> 字体为例，这款字体在工作时的客户端页面中也得到了应用。</p>
<h3>安装步骤</h3>
<ol>
<li>
<p><strong>通过 Portainer 进入容器</strong>（也可以使用命令行进入）：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> jellyfin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /bin/bash</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p><strong>更新软件源</strong>：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p><strong>安装字体</strong>：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fonts-noto-cjk-extra</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p><strong>最后重启容器</strong>。</p>
</li>
</ol>
<blockquote>
<p><strong>提示</strong>：在很多情况下，使用外部的 ASS 字幕会导致显示问题，若更换为 SRT 字幕则可以避免此类困扰。</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>《MySQL是怎样运行的：从根上理解MySQL》</title>
      <link>https://jayczee.cn/note/mysql.html</link>
      <guid>https://jayczee.cn/note/mysql.html</guid>
      <source url="https://jayczee.cn/rss.xml">《MySQL是怎样运行的：从根上理解MySQL》</source>
      <description>感谢原书作者 感谢原书作者的总结，原书地址：原书地址 免费分享出来的Github Page：Github Page 有机会还是付费支持一下原作者，此处仅总结个人学习到的知识点，不展开说明。 第一章 重新认识MYSQL MySQL是C/S架构的，默认使用TCP协议通信。 mysqld是服务端程序，可用于直接启动一个mysqld进程。 mysqld_saf...</description>
      <category>学习笔记</category>
      <pubDate>Sat, 08 Feb 2025 10:08:16 GMT</pubDate>
      <content:encoded><![CDATA[<h2>感谢原书作者</h2>
<p>感谢原书作者的总结，原书地址：<a href="https://juejin.cn/book/6844733769996304392" target="_blank" rel="noopener noreferrer">原书地址</a></p>
<p>免费分享出来的Github Page：<a href="https://relph1119.github.io/mysql-learning-notes/#/" target="_blank" rel="noopener noreferrer">Github Page</a></p>
<p>有机会还是付费支持一下原作者，此处仅总结个人学习到的知识点，不展开说明。</p>
<h2>第一章 重新认识MYSQL</h2>
<ol>
<li><strong>MySQL是C/S架构的</strong>，默认使用TCP协议通信。</li>
<li><strong>mysqld</strong>是服务端程序，可用于直接启动一个mysqld进程。</li>
<li><strong>mysqld_safe</strong>是一个脚本，用于启动mysqld的同时启动一个守护进程，当mysqld挂掉时重启，还会将错误信息日志等重定向到别的文件中方便调查。</li>
<li><strong>mysql.server</strong>间接调用mysql_safe，用于启动和停止MySQL服务器的脚本。</li>
<li><strong>mysql</strong>用于启动客户端程序与服务端进行通信，启动参数可使用<code>-h</code>指定服务器地址，<code>-u</code>指定用户，<code>-p</code>指定密码。</li>
<li><strong>mysqld</strong>启动时使用<code>-P</code>指定监听端口，同样客户端mysql启动时也可以使用<code>-P</code>指定服务端端口。</li>
<li>服务端处理客户端查询请求大致分为<strong>连接管理</strong>、<strong>解析与优化</strong>、<strong>存储引擎</strong>三个部分，如下图:</li>
</ol>
<figure><img src="/assets/images/note/mysql/m-1.png" alt="MySQL客户端处理客户端请求" tabindex="0" loading="lazy"><figcaption>MySQL客户端处理客户端请求</figcaption></figure>
<ol start="8">
<li>服务端与客户端建立连接后，服务端会创建一个线程处理该客户端的请求。当连接断开后，该线程会放入缓存，避免频繁创建与销毁线程带来的开销。</li>
<li>连接创建后，需要经过解析与优化，分别是<strong>查询缓存</strong>、<strong>语法解析</strong>、<strong>查询优化</strong>。</li>
<li>查询缓存只有查询语句SQL与先前的SQL一模一样时才有机会命中缓存，任何的不同都不会命中。</li>
<li>包含某些系统函数（比如NOW）、用户自定义变量与函数以及系统表的SQL的查询结果不会被缓存。</li>
<li>如果某表被更新，那么相关的缓存全都会失效。</li>
<li>如果缓存未命中，则进入语法解析阶段。</li>
<li>语法解析完成后进入查询优化，最终会生成一个执行计划。可以使用<code>EXPLAIN</code>命令查看。截止到目前为止尚未访问真实表。</li>
<li><strong>查询缓存</strong>、<strong>语法解析</strong>、<strong>查询优化</strong>划分为<strong>Mysql Server</strong>的功能，而真实存取数据的功能划分为<strong>存储引擎</strong>的功能。各种存储引擎向<strong>Mysql Server</strong>层提供统一的调用接口（存储引擎API）。</li>
<li><strong>Mysql Server</strong>完成查询优化后，根据生成的执行计划调用存储引擎API，直接返回数据。</li>
<li>Mysql存储引擎包含：</li>
</ol>
<p>| 存储引擎   | 描述                                   |<br>
|</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/note/mysql/m-1.png" type="image/png"/>
    </item>
    <item>
      <title>Ollama本地部署Deepseek R1</title>
      <link>https://jayczee.cn/windows/ollama.html</link>
      <guid>https://jayczee.cn/windows/ollama.html</guid>
      <source url="https://jayczee.cn/rss.xml">Ollama本地部署Deepseek R1</source>
      <description>Ollama LogoOllama Logo Ollama是一个创新的平台，旨在简化人工智能模型的使用与部署。用户可以轻松地下载、运行和管理各种AI模型，而无需深入的技术背景。Ollama提供了友好的用户界面，使得开发者和研究人员能够快速实现他们的想法，并将AI应用于实际项目中。无论是文本生成、图像处理还是其他机器学习任务，Ollama都能提供高效的解...</description>
      <category>Windows</category>
      <pubDate>Fri, 07 Feb 2025 06:17:35 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="/assets/images/windows/ollama/ollama.png" alt="Ollama Logo" tabindex="0" loading="lazy"><figcaption>Ollama Logo</figcaption></figure>
<p>Ollama是一个创新的平台，旨在简化人工智能模型的使用与部署。用户可以轻松地下载、运行和管理各种AI模型，而无需深入的技术背景。Ollama提供了友好的用户界面，使得开发者和研究人员能够快速实现他们的想法，并将AI应用于实际项目中。无论是文本生成、图像处理还是其他机器学习任务，Ollama都能提供高效的解决方案，助力用户在AI领域的探索与实践。</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/windows/ollama/ollama.png" type="image/png"/>
    </item>
    <item>
      <title>硬链接与软链接、复制与移动的区别</title>
      <link>https://jayczee.cn/linux/link.html</link>
      <guid>https://jayczee.cn/linux/link.html</guid>
      <source url="https://jayczee.cn/rss.xml">硬链接与软链接、复制与移动的区别</source>
      <description>在计算机的文件系统中，硬链接、软链接、复制和移动是非常常见的操作。理解这些操作的区别，不仅能帮助提高文件管理的效率，还能避免不必要的数据丢失。下面将详细介绍这些概念及其在 Debian 系统下的具体操作方法。 🔗 硬链接 硬链接是一种直接指向文件数据的引用方式。可以理解为多个文件名指向同一份文件内容。 🌟 特点 相同的 inode：硬链接与原始文件...</description>
      <category>Linux</category>
      <pubDate>Mon, 20 Jan 2025 07:37:31 GMT</pubDate>
      <content:encoded><![CDATA[<p>在计算机的文件系统中，硬链接、软链接、复制和移动是非常常见的操作。理解这些操作的区别，不仅能帮助提高文件管理的效率，还能避免不必要的数据丢失。下面将详细介绍这些概念及其在 Debian 系统下的具体操作方法。</p>
<h2>🔗 硬链接</h2>
<p>硬链接是一种直接指向文件数据的引用方式。可以理解为多个文件名指向同一份文件内容。</p>
<h3>🌟 特点</h3>
<ul>
<li>
<p><strong>相同的 inode</strong>：硬链接与原始文件共享相同的 inode（索引节点），这意味着它们实际上是同一份数据的不同名称。</p>
</li>
<li>
<p><strong>不可跨文件系统</strong>：硬链接只能在同一文件系统中创建，无法跨越不同的存储设备或分区。</p>
</li>
<li>
<p><strong>删除文件时</strong>：只有当所有指向同一数据的硬链接都被删除后，文件的数据才会被释放，这样可以避免误删数据的风险。</p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>qBittorrent 分类管理</title>
      <link>https://jayczee.cn/nas/qbit-category.html</link>
      <guid>https://jayczee.cn/nas/qbit-category.html</guid>
      <source url="https://jayczee.cn/rss.xml">qBittorrent 分类管理</source>
      <description>刚开始用qBittorrent时，发现了分类这么一个功能，并且我在创建分类时，还可以填写存储位置。 qBittorrent创建分类qBittorrent创建分类 此时我当然想到既然分类和存储位置相关，那么在新建下载的时候，只要选择好分类，就能自动填写存储位置，毕竟qBittorrent填写存储位置时竟然不会联想。 于是立刻实操。 首先右键新建分类，然后...</description>
      <category>NAS</category>
      <pubDate>Tue, 14 Jan 2025 08:18:39 GMT</pubDate>
      <content:encoded><![CDATA[<p>刚开始用qBittorrent时，发现了分类这么一个功能，并且我在创建分类时，还可以填写存储位置。</p>
<figure><img src="/assets/images/nas/qbittorrent/qbit-3.png" alt="qBittorrent创建分类" tabindex="0" loading="lazy"><figcaption>qBittorrent创建分类</figcaption></figure>
<p>此时我当然想到既然分类和存储位置相关，那么在新建下载的时候，只要选择好分类，就能自动填写存储位置，<strong>毕竟qBittorrent填写存储位置时竟然不会联想</strong>。</p>
<p>于是立刻实操。</p>
<p>首先右键新建分类，然后左上角新建下载时选择分类，然并卵。。。。。。</p>
<p>此时创建的下载任务，分类一栏确实显示了我增加的分类，但是下载地址仍然要我自己填写。</p>
<p>折腾了半天，发现了需要如下设置：</p>
<figure><img src="/assets/images/nas/qbittorrent/qbit-4.png" alt="qBittorrent自动分类管理" tabindex="0" loading="lazy"><figcaption>qBittorrent自动分类管理</figcaption></figure>
<p>将分类管理设成<code>自动</code>后，修改分类时才会自动填写存储路径。并且还可以实现修改已下载文件的分类时自动转移文件位置的功能。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在将该选项设为自动后，使用其他媒体整理工具（nastool、moviepilot等）的相关功能时也可以根据qBittorrent的分类来管理资源。例如<code>自动刷流</code>插件。</p>
</div>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/qbittorrent/qbit-3.png" type="image/png"/>
    </item>
    <item>
      <title>📦 Fedex物流单号状态爬取</title>
      <link>https://jayczee.cn/code/fedex-crawler.html</link>
      <guid>https://jayczee.cn/code/fedex-crawler.html</guid>
      <source url="https://jayczee.cn/rss.xml">📦 Fedex物流单号状态爬取</source>
      <description>📂 项目地址 [Github]Fedex Tracking Bot 📚 背景 在最近的工作中，运营部门要求确认一些 FedEx 物流单号的状态。虽然自己在过去的工作中主要专注于 CRUD 操作，并没有深入了解物流相关的内容，但这次的任务激发了对这一领域的浓厚兴趣。为了满足需求，经过一番摸索和实践，成功实现了一个简单的爬虫，收获颇丰，感到非常兴奋，也...</description>
      <category>爬虫</category>
      <category>fedex</category>
      <category>python</category>
      <pubDate>Mon, 13 Jan 2025 09:45:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2>📂 项目地址</h2>
<p><a href="https://github.com/Jayczee/fedex_tracking_bot" target="_blank" rel="noopener noreferrer">[Github]Fedex Tracking Bot</a></p>
<h2>📚 背景</h2>
<p>在最近的工作中，运营部门要求确认一些 FedEx 物流单号的状态。虽然自己在过去的工作中主要专注于 CRUD 操作，并没有深入了解物流相关的内容，但这次的任务激发了对这一领域的浓厚兴趣。为了满足需求，经过一番摸索和实践，成功实现了一个简单的爬虫，收获颇丰，感到非常兴奋，也希望能与大家分享经验并寻求指导。</p>
<h2>🎯 需求</h2>
<p>本次任务的目标是对 <strong>8000</strong> 个左右的 FedEx 物流单号进行状态爬取，明确判断其状态是 <strong>Label Created</strong> 还是 <strong>Delivered</strong>。这一过程涉及到对 FedEx 物流系统的深入了解，尤其是在状态查询的实现上。</p>
<h2>🛠️ 尝试方案记录</h2>
<h3>1. 使用官方 API</h3>
<ul>
<li><strong>结果</strong>：略过</li>
<li><strong>原因</strong>：由于自己负责的项目并未对接过 FedEx，因此需要现学，容易在过程中遇到各种问题。不过，可以参考公司其他项目的配置作为备选方案。</li>
</ul>
<h3>2. 直接调用 FedEx 查询接口</h3>
<ul>
<li><strong>结果</strong>：失败</li>
<li><strong>原因</strong>：尝试直接调用 <code>https://api.fedex.com.cn/track/v2/shipments</code> 接口，发现返回了 403 错误。即便添加了 Cookie 和 User-Agent 等必要参数，依然无法成功获取数据。</li>
</ul>
<h3>3. Jsoup 获取页面信息</h3>
<ul>
<li><strong>结果</strong>：失败</li>
<li><strong>原因</strong>：通过分析发现，物流查询页面为动态加载的页面，使用 Jsoup 获取的 HTML 仅为初始页面，无法获得实际的物流信息。</li>
</ul>
<h3>4. 使用 Selenium</h3>
<ul>
<li><strong>结果</strong>：成功</li>
<li><strong>原因</strong>：考虑到页面是动态加载的，决定使用 Selenium 库。Selenium 能够模拟真实用户在浏览器中的操作，访问页面并等待 JavaScript 渲染数据。虽然原本计划使用 Java 实现，但由于网上大部分文档和案例都是用 Python 编写，因此最终选择 Python 完成代码编写，便于快速实施。</li>
</ul>
<h2>📊 物流状态信息分析</h2>
<p>通过对页面的深入分析，发现物流状态相关的 HTML 结构是有规律可循的：</p>
<ul>
<li><strong>加粗黑体字部分</strong>（如“寄件人”、“我们收到了您的包裹”、“外出递送”、“已送达”）使用 <code>class="shipment-status-progress-step-label"</code> 的 <code>&lt;span&gt;</code> 标签进行展示。</li>
<li><strong>斜体小字部分</strong>（如“标签已创建”、“已送达”）则使用 <code>class="shipment-status-progress-step-label-info"</code> 的 <code>&lt;span&gt;</code> 标签。</li>
</ul>
<figure><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/fedex-tracking-bot-1.png" alt="Fedex物流信息截图" tabindex="0" loading="lazy"><figcaption>Fedex物流信息截图</figcaption></figure>
<h3>🔍 基本逻辑</h3>
<p>基于以上分析，爬取物流状态的基本逻辑如下：</p>
<ol>
<li>使用 Selenium 访问指定的 URL，并将单号部分替换为待查询的单号。</li>
<li>等待页面加载完成，确保上述 class 的元素出现在 HTML 中。</li>
<li>定位到 <code>shipment-status-progress-step active</code> 下的状态信息，并获取其值。</li>
</ol>
<h2>⚠️ 遇到的问题及解决方案</h2>
<h3>1. 页面提示 “Under Construction”</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>在某些情况下，FedEx 页面会提示“Under Construction”，导致无法获取信息。为了解决这一问题，建议在代码中加入重试机制，以便在遇到此类问题时能够自动重试。</p>
</div>
<h3>2. 爬取速度慢</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于每个单号的查询需要大约 10 秒钟，整体爬取速度较慢。为此，可以考虑使用多线程技术，开启多个窗口同时进行爬取。不过需要注意的是，多开 Chrome 浏览器会消耗大量内存，建议合理设置线程数量。</p>
</div>
<h3>3. 内存泄漏</h3>
<p>在初次实现时，爬取到的数据会暂存到内存中，等爬取完成后再一次性写入 Excel 文件。结果在爬取到 1000 个单号时，内存占用过高导致电脑崩溃。经过反复测试，最终决定将数据在爬取过程中直接写入文件，并加锁以避免并发问题。</p>
<h3>4. 访问频率过高被屏蔽</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在进行大量查询时，频繁访问会导致被 FedEx 屏蔽。为了解决这个问题，可以使用代理池，通过实际测试发现，当查询次数超过 100 次时，便会被暂时禁止访问。可以考虑使用自己的代理节点，借助工具将其转为代理池，以均匀分配访问请求。</p>
</div>
<h2>📝 结论</h2>
<p>通过此次实践，成功实现了对 FedEx 物流单号状态的爬取，积累了宝贵的经验和教训。尽管在过程中遇到了一些挑战，但最终都一一克服。希望能与各位前辈分享经验，欢迎进行指导和讨论。</p>
<h2>📚 参考资源</h2>
<ul>
<li><a href="https://github.com/Rain-kl/glider_guid" target="_blank" rel="noopener noreferrer">Glider Guide</a> - 该工具可以将自己的代理节点转为代理池，帮助更好地管理请求。</li>
</ul>
<h2>📷 效果图</h2>
<figure><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/fedex-tracking-bot-2.png" alt="爬取结果" tabindex="0" loading="lazy"><figcaption>爬取结果</figcaption></figure>
<h2>💻 最终代码</h2>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pandas </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> bs4 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> BeautifulSoup</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.chrome.service </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Service</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.common.by </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> By</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.support.ui </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> WebDriverWait</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.support </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> expected_conditions </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66"> EC</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.chrome.options </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Options</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> time</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> concurrent.futures</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logging</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> datetime </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> datetime</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> threading</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 设置日志配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logging.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">basicConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">level</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logging.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">INFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">format</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%(asctime)s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%(levelname)s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%(message)s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logger </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> logging.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 读取 input.xlsx 中的所有数据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">read_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'input.xlsx'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 获取已爬取的单号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">processed_numbers </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">listdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'.'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">startswith</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking_results'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">and</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">endswith</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'.xlsx'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"文件名：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'.'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        processed_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">read_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        existed_list </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> processed_df[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">tolist</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"存在已爬取单号</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(existed_list)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">个"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"添加前已存在</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(processed_numbers)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">个"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        processed_numbers.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(existed_list)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"添加后已存在</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(processed_numbers)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">个"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 将未爬取的 ref_number 列的数据存入 list_ 中</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">list_ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> df[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'ref_number'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">tolist</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">not</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> processed_numbers]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">total_count </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(list_)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 总数量</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"需要爬取的总数量: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">total_count</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 设置 ChromeOptions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> Options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--proxy-server=socks5://127.0.0.1:8443'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--disable-gpu'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 禁用 GPU 加速</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--no-sandbox'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 解决 DevToolsActivePort 文件不存在的错误</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">add_argument</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'--disable-dev-shm-usage'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 共享内存不足的问题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 创建锁</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">lock </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> threading.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 找到下一个 tracking_resultsN.xlsx 文件名</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">file_index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking_results</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">file_index</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.xlsx'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    file_index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">output_file </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking_results</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">file_index</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.xlsx'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 定义一个函数来处理每个单号</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fetch_tracking_info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    retries </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 设置重试次数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> attempt </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(retries):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"开始处理单号: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">, 尝试次数: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">service</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'./chromedriver.exe'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">options</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">chrome_options)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">execute_cdp_cmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Page.addScriptToEvaluateOnNewDocument"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                "source"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"""</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                Object.defineProperty(navigator, 'webdriver', {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                  get: () =&gt; undefined</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                })</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">              """</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://www.fedex.com.cn/fedextrack/?trknbr=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            # 等待 shipment-status-progress-step-label 出现并且有值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">                WebDriverWait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(driver, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">until</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">                    EC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">presence_of_element_located</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">CLASS_NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'shipment-status-progress-step-label-info'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 确保页面加载完成</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.page_source</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                html </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> BeautifulSoup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(x, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"html.parser"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                active_step </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> html.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">class_</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'shipment-status-progress-step active'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                label_value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> None</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> active_step:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    label_span </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> active_step.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'span'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">class_</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'shipment-status-progress-step-label-info'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> label_span </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> label_span.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get_text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        label_value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> label_span.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get_text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> label_value:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"完成处理单号: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">, 状态: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">label_value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    # 使用锁来确保线程安全写入Excel文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lock:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            existing_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">read_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            new_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">DataFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([[num, label_value]], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">columns</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'label_value'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">dtype</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            result_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([existing_df, new_df], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ignore_index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                        else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                            result_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">DataFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([[num, label_value]], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">columns</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'label_value'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">dtype</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                        result_df.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">to_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> num, label_value</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                    raise</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"状态标签没有值"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">warning</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"单号 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 状态标签未找到或无值"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> retries </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"重试单号: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">, 尝试次数: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">attempt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"单号 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 处理失败，已达到最大重试次数"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                continue</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  # 继续重试</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> Exception</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> e:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"处理单号 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">num</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 时发生错误: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">quit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 在达到最大重试次数后，记录失败的结果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lock:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            existing_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">read_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file)   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            new_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">DataFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([[num, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Unknown'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">columns</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'label_value'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">dtype</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            result_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([existing_df, new_df], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ignore_index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            result_df </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">DataFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([[num, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Unknown'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">columns</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'tracking'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'label_value'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">dtype</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        result_df.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">to_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(output_file, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">index</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> num, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">None</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 记录开始时间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">start_time </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> datetime.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 使用 ThreadPoolExecutor 来并行处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> concurrent.futures.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">ThreadPoolExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">max_workers</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> executor:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    future_to_num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {executor.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">submit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(fetch_tracking_info, num): num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> num </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> list_}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> future </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> concurrent.futures.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">as_completed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(future_to_num):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        tracking_num, label_value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> future.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 记录结束时间</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">end_time </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> datetime.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 计算运行时长</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">duration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> end_time </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> start_time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 输出运行时长</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">hours, remainder </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> divmod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(duration.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">total_seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">minutes, seconds </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> divmod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(remainder, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"程序运行时间: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(hours)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">时 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(minutes)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">分 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(seconds)</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">秒"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">logger.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"所有单号处理完成"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>代码说明</h3>
<ul>
<li><strong>日志记录</strong>：使用 <code>logging</code> 模块记录程序的运行状态，便于调试和跟踪。</li>
<li><strong>数据读取与写入</strong>：使用 <code>pandas</code> 读取输入的 Excel 文件，并在爬取过程中将结果写入新的 Excel 文件。</li>
<li><strong>Selenium 操作</strong>：通过 Selenium 模拟用户在浏览器中的操作，获取动态加载的物流状态信息。</li>
<li><strong>多线程处理</strong>：使用 <code>ThreadPoolExecutor</code> 实现多线程爬取，提高爬取效率。</li>
<li><strong>异常处理与重试机制</strong>：在遇到错误时进行重试，确保程序的健壮性。</li>
</ul>
<p>通过以上步骤与代码实现，成功爬取了 FedEx 物流单号的状态信息，为运营部门提供了所需的数据支持。希望这份经验能帮助到更多有类似需求的朋友们！</p>
]]></content:encoded>
      <enclosure url="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/fedex-tracking-bot-1.png" type="image/png"/>
    </item>
    <item>
      <title>Docker 镜像加速/代理</title>
      <link>https://jayczee.cn/linux/docker-proxy.html</link>
      <guid>https://jayczee.cn/linux/docker-proxy.html</guid>
      <source url="https://jayczee.cn/rss.xml">Docker 镜像加速/代理</source>
      <description>在国内，Docker Hub 镜像源的情况不容乐观，无论是清华大学镜像源，还是阿里镜像加速，统统都已经失效。国内现在已经不允许开设 Docker 镜像加速服务，唯一的办法仍然是走代理。🌐 Docker 拉取镜像是由 Docker daemon 进行的，因此简单的环境变量设置如： 已经无法满足需求，需要直接对 Docker 进行配置。 🛠️ Dock...</description>
      <category>Linux</category>
      <pubDate>Fri, 10 Jan 2025 10:15:51 GMT</pubDate>
      <content:encoded><![CDATA[<p>在国内，Docker Hub 镜像源的情况不容乐观，无论是清华大学镜像源，还是阿里镜像加速，统统都已经失效。国内现在已经不允许开设 Docker 镜像加速服务，唯一的办法仍然是走代理。🌐</p>
<p>Docker 拉取镜像是由 Docker daemon 进行的，因此简单的环境变量设置如：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> http_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://proxy_address:port"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>已经无法满足需求，需要直接对 Docker 进行配置。</p>
<h2>🛠️ Docker 代理配置</h2>
<h3>1. 配置环境变量</h3>
<p>首先，创建或编辑 <code>/etc/systemd/system/docker.service.d/http-proxy.conf</code> 文件：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/systemd/system/docker.service.d</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/systemd/system/docker.service.d/http-proxy.conf</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件中输入如下内容：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Service]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Environment</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP_PROXY=http://proxy_address:port"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Environment</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTPS_PROXY=http://proxy_address:port"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Environment</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"NO_PROXY=localhost,127.0.0.1,.example.com"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里分别设置了 <code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code> 和 <code>NO_PROXY</code> 等参数。</p>
<h3>2. 重新加载 systemctl 环境变量</h3>
<p>执行以下命令以重新加载配置：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> daemon-reload</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>3. 重启 Docker 服务</h3>
<p>最后，重启 Docker 服务以应用新的代理设置：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> docker</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>完成上述步骤后，重新拉取 Docker 镜像即可。🚀</p>
]]></content:encoded>
    </item>
    <item>
      <title>🏠 个人的NAS最佳实践</title>
      <link>https://jayczee.cn/nas/</link>
      <guid>https://jayczee.cn/nas/</guid>
      <source url="https://jayczee.cn/rss.xml">🏠 个人的NAS最佳实践</source>
      <description>📖 NAS简介 NAS（Network Attached Storage），即网络附属存储，是中年男人三大爱好之一（我毕业的时候入的坑，所以我一毕业就成为了中年...bushi）。 在如今的市场上，有许多成品NAS可供选择，例如威联通、群晖和绿联等知名品牌。这些品牌提供各自独特的NAS系统，用户购买后可以快速进行配置，以满足个人需求。然而，对于像我这...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<h2>📖 NAS简介</h2>
<blockquote>
<p><strong>NAS（Network Attached Storage）</strong>，即网络附属存储，是中年男人三大爱好之一（我毕业的时候入的坑，所以我一毕业就成为了中年...bushi）。</p>
</blockquote>
<p>在如今的市场上，有许多成品NAS可供选择，例如威联通、群晖和绿联等知名品牌。这些品牌提供各自独特的NAS系统，用户购买后可以快速进行配置，以满足个人需求。然而，对于像我这样的刚毕业的穷鬼来说，成品NAS的价格往往难以承受。因此，更倾向于使用一台纯净的服务器，从零开始自己搭建NAS，这样不仅能节省开支，还能学习到许多新知识。</p>
]]></content:encoded>
      <enclosure url="https://img.shields.io/badge/Docker-0db7f2?style=flat-square&amp;logo=docker&amp;logoColor=white" type="image/"/>
    </item>
    <item>
      <title>Jellyfin 编码与解码 | N 卡驱动安装</title>
      <link>https://jayczee.cn/nas/jellyfin-encode-decode.html</link>
      <guid>https://jayczee.cn/nas/jellyfin-encode-decode.html</guid>
      <source url="https://jayczee.cn/rss.xml">Jellyfin 编码与解码 | N 卡驱动安装</source>
      <description>🎥 什么是编码与解码？ 📡 编码 编码是将原始音视频数据转换为特定格式的过程，以便于存储和传输。这个过程通常涉及压缩，以减少文件大小，从而节省存储空间和带宽。常见的编码格式包括： 视频编码格式：如 H.264、H.265（HEVC）、VP9 等。 音频编码格式：如 AAC、MP3、FLAC 等。 🔄 解码 解码是将编码后的音视频数据转换回可播放格...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<h2>🎥 什么是编码与解码？</h2>
<h3>📡 编码</h3>
<p>编码是将原始音视频数据转换为特定格式的过程，以便于存储和传输。这个过程通常涉及压缩，以减少文件大小，从而节省存储空间和带宽。常见的编码格式包括：</p>
<ul>
<li><strong>视频编码格式</strong>：如 H.264、H.265（HEVC）、VP9 等。</li>
<li><strong>音频编码格式</strong>：如 AAC、MP3、FLAC 等。</li>
</ul>
<h3>🔄 解码</h3>
<p>解码是将编码后的音视频数据转换回可播放格式的过程。解码器负责读取编码数据，并将其转换为可以在媒体播放器中播放的格式。</p>
<h2>🔍 Jellyfin 中的编码与解码</h2>
<p>Jellyfin 通过使用 FFmpeg 等工具来处理音视频的编码与解码。</p>
<h3>1. <strong>转码</strong></h3>
<p>当客户端设备不支持片源的音视频格式时，Jellyfin 会自动进行转码。转码是将文件从一种格式转换为另一种格式的过程。Jellyfin 会根据客户端的能力和网络状况选择最佳的转码方式。</p>
<h3>2. <strong>直接播放</strong></h3>
<p>如果客户端设备支持片源的音视频格式，Jellyfin 会选择直接播放。因此，在选择片源时，尽量选择主力播放设备支持的格式。如果使用功能较齐全的电视播放，通常大部分都是直接播放的。</p>
<h3>3. <strong>硬解与软解</strong></h3>
<ul>
<li>
<p><strong>硬解</strong>：利用硬件加速进行解码，通常使用 NAS 上的显卡进行解码，例如 NVIDIA GPU 和 Intel Quick Sync（核显）。</p>
</li>
<li>
<p><strong>软解</strong>：通过软件进行解码，通常会消耗更多的 CPU 资源，可能导致性能下降，尤其是在高分辨率视频播放时。面对高质量片源时，软解的效率较低。</p>
</li>
</ul>
<h2>🖥️ Docker 中的 Jellyfin 使用 NVIDIA 显卡进行硬解</h2>
<h3>1. 安装 N 卡驱动</h3>
<p>如果 Jellyfin 部署在 Docker 中，并且 NAS 拥有一块 NVIDIA 显卡并想用该显卡解码，那么在部署 Jellyfin 之前需要先在 NAS 上安装 NVIDIA 驱动。</p>
<p>首先，运行命令检查是否已经安装 N 卡驱动：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nvidia-smi</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>如果输出信息类似下图，且 Driver Version 与 CUDA Version 不为空，则表示已安装驱动。</p>
<figure><img src="/assets/images/nas/jellyfin/j-5.png" alt="nvidia-smi 输出信息" tabindex="0" loading="lazy"><figcaption>nvidia-smi 输出信息</figcaption></figure>
<p>如果提示命令不存在等信息，则视为未安装驱动。</p>
<p>访问 <a href="https://www.nvidia.cn/drivers/lookup/" target="_blank" rel="noopener noreferrer">NVIDIA 官网</a>，根据 NAS 的配置信息，搜索对应的驱动：</p>
<figure><img src="/assets/images/nas/jellyfin/j-6.png" alt="搜索驱动" tabindex="0" loading="lazy"><figcaption>搜索驱动</figcaption></figure>
<figure><img src="/assets/images/nas/jellyfin/j-7.png" alt="搜索结果" tabindex="0" loading="lazy"><figcaption>搜索结果</figcaption></figure>
<p>右键单击下载按钮，复制地址，在 NAS 命令行中使用 <code>wget</code> 命令下载：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://cn.download.nvidia.com/XFree86/Linux-x86_64/550.144.03/NVIDIA-Linux-x86_64-550.144.03.run</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>当然，也可以下载到其他机器上，通过 SFTP 或 SCP 等方式传输到 NAS 上。</p>
<p>下载完成后，运行命令，根据提示完成安装：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ./NVIDIA-Linux-x86_64-550.144.03.run</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>2. Jellyfin Docker Compose 配置</h3>
<p>以下是配置 Jellyfin 使用 NVIDIA 显卡的 Docker Compose 示例：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'3.8'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jellyfin_config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jellyfin_cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jellyfin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nyanmisaka/jellyfin:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">always</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_DRIVER_CAPABILITIES=all</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_VISIBLE_DEVICES=all</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">host</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin_config:/config</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin_cache:/cache</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt/data_hdd:/data_hdd</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 该映射是影音文件存储位置，可根据实际情况调整</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt/nas1_smb:/nas1_smb</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 该映射是影音文件存储位置，可根据实际情况调整</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/dev:/dev</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    runtime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nvidia</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        reservations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">          devices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">capabilities</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">              - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">gpu</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/jellyfin/j-5.png" type="image/png"/>
    </item>
    <item>
      <title>Docker</title>
      <link>https://jayczee.cn/nas/basic/1-docker.html</link>
      <guid>https://jayczee.cn/nas/basic/1-docker.html</guid>
      <source url="https://jayczee.cn/rss.xml">Docker</source>
      <description>Docker Logo 📚 相关链接 🌐 Docker 官网 📖 Docker 文档 💻 Docker Desktop 安装 (Windows系统推荐) 🐧 Docker Engine 安装 (Linux及Mac系统推荐) 🛠️ 安装说明 本教程不详细描述安装过程，可以根据官方文档的步骤进行安装。对于Windows系统，推荐安装Docker...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<img src="/assets/svg/docker.svg" alt="Docker Logo" style="width: 200px;">
<h2>📚 相关链接</h2>
<ul>
<li>🌐 <a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker 官网</a></li>
<li>📖 <a href="https://docs.docker.com/" target="_blank" rel="noopener noreferrer">Docker 文档</a></li>
<li>💻 <a href="https://docs.docker.com/desktop/setup/install/windows-install/" target="_blank" rel="noopener noreferrer">Docker Desktop 安装 (Windows系统推荐)</a></li>
<li>🐧 <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener noreferrer">Docker Engine 安装 (Linux及Mac系统推荐)</a></li>
</ul>
<h2>🛠️ 安装说明</h2>
<p>本教程不详细描述安装过程，可以根据官方文档的步骤进行安装。对于Windows系统，推荐安装<strong>Docker Desktop</strong>，它提供了友好的图形用户界面，使用起来更加方便。喜欢使用命令行的朋友可以选择安装<strong>Docker Engine</strong>。</p>
<h2>📖 使用教程</h2>
<p>Docker的使用可以参考<a href="https://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener noreferrer">Docker 菜鸟教程</a>。该教程简明易懂，跟着操作一遍即可掌握基础功能，后续可以在实践中逐步提升。</p>
<h2>❓ 为什么要安装 Docker？</h2>
<p>在<a href="/nas/" target="_blank">个人最佳实践</a>中提到的服务都可以直接安装在宿主机上，也就是直接在Windows、Linux或Mac OS系统中进行安装。那么，为什么还需要再套一层Docker呢？</p>
<ol>
<li>
<p><strong>避免冲突</strong>：许多服务需要依赖特定的库和版本，不同服务之间可能会产生冲突。</p>
</li>
<li>
<p><strong>简化卸载</strong>：在宿主机上卸载某个服务时，需要逐步卸载软件并删除配置文件夹，这个过程非常繁琐，稍有不慎就可能留下残留文件，后续维护工作也会变得复杂。</p>
</li>
</ol>
<h2>📦 镜像与容器</h2>
<p><strong>镜像</strong>是一个轻量级、可执行的独立软件包，包含了运行某个应用所需的所有代码、库和依赖。<strong>容器</strong>则是镜像的运行实例，它提供了一个隔离的环境来运行应用，确保应用在不同环境中具有一致的运行效果。</p>
<h2>🌍 Docker Hub</h2>
<p><a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>是一个Docker镜像站（需要开启代理访问），里面包含了大量镜像资源，也是docker pull命令默认拉取的镜像仓库。</p>
<h2>📰 相关文章</h2>
<ul>
<li>📦 <a href="/linux/docker-proxy.html" target="_blank">Docker 镜像加速/代理</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Movie-pilot 自动化媒体整理</title>
      <link>https://jayczee.cn/nas/basic/10-movie-pilot.html</link>
      <guid>https://jayczee.cn/nas/basic/10-movie-pilot.html</guid>
      <source url="https://jayczee.cn/rss.xml">Movie-pilot 自动化媒体整理</source>
      <description>已安装的 qbittorrent 服务与 jellyfin 服务已经能提供最基本的影音需求，但在使用 jellyfin 查看媒体文件夹中的影片时，可能会出现以下问题： 📽️ 影音文件以源文件名而不是影片名显示 🖼️ 缺少海报，演员信息 📂 所有影音资源挤在一个下载文件夹中，包含了一些非影音资源文件，显得非常杂乱 🎬 影音文件缺少字幕 🔄 媒体...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p>已安装的 qbittorrent 服务与 jellyfin 服务已经能提供最基本的影音需求，但在使用 jellyfin 查看媒体文件夹中的影片时，可能会出现以下问题：</p>
<ol>
<li>📽️ 影音文件以源文件名而不是影片名显示</li>
<li>🖼️ 缺少海报，演员信息</li>
<li>📂 所有影音资源挤在一个下载文件夹中，包含了一些非影音资源文件，显得非常杂乱</li>
<li>🎬 影音文件缺少字幕</li>
<li>🔄 媒体库刷新不及时，经常需要手动刷新</li>
<li>📝 媒体文件需要手动命名，手动设置元数据等等</li>
</ol>
<p>此时，需要一款帮助解决此类问题的媒体整体工具，即 <strong>Movie pilot</strong>（原 Nas tool 作者开发，为 Nas tool 上位替代版本）。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://wiki.movie-pilot.org/" target="_blank" rel="noopener noreferrer">Movie pilot 官方 Wiki</a></li>
<li><a href="https://github.com/jxxghp/MoviePilot" target="_blank" rel="noopener noreferrer">Movie pilot Github</a></li>
</ul>
<h2>🚀 安装步骤</h2>
<p>详细的安装参数建议参考 <a href="https://wiki.movie-pilot.org/" target="_blank" rel="noopener noreferrer">Movie pilot 官方 Wiki</a>，此处仅简述安装步骤。</p>
<h3>🔑 获取 IYUU Token</h3>
<p>为了防止该项目遭到滥用，作者设置了认证环节，用户在使用之前需要使用 PT 站点或者 IYUU 进行认证 (<a href="https://wiki.movie-pilot.org/configuration" target="_blank" rel="noopener noreferrer">查看详情</a>)。此处提供 IYUU 认证步骤示例，较为简单。参考官方文档，如果准备使用其他站点的认证可以跳过该步骤。如果不进行认证，将无法使用 Moviepilot 的大部分功能。</p>
<p>访问 <a href="https://iyuu.cn/" target="_blank" rel="noopener noreferrer">IYUU 爱语飞飞</a>，点击页面中间的开始使用：</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-1.png" alt="IYUU官方网站" tabindex="0" loading="lazy"><figcaption>IYUU官方网站</figcaption></figure>
<p>点击之后页面中央会出现二维码，使用微信扫码，关注 IYUU 公众号，获得 IYUU Token 的推送：</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-2.png" alt="IYUU微信号推送" tabindex="0" loading="lazy"><figcaption>IYUU微信号推送</figcaption></figure>
<h3>🛠️ 服务部署</h3>
<p>docker compose 文件如下：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'3.3'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    moviepilot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        stdin_open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        tty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">moviepilot-v2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">moviepilot-v2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">moviepilot</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">53010</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">              published</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">53010</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">              protocol</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">tcp</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/mnt:/mnt'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/moviepilot-v2/config:/config'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/moviepilot-v2/core:/moviepilot/.cache/ms-playwright'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/var/run/docker.sock:/var/run/docker.sock:ro'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'NGINX_PORT=53010'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'PORT=3001'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'PUID=0'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'PGID=0'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'UMASK=000'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'TZ=Asia/Shanghai'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'SUPERUSER=jayczee'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'AUTH_SITE=iyuu'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'IYUU_SIGN=你的IYUU TOKEN'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'PROXY_HOST=http://192.168.10.229:50171'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">always</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jxxghp/moviepilot-v2:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  moviepilot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">moviepilot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处使用的是 moviepilot-v2 版本，特别设置了 <code>SUPERUSER=jayczee</code>，管理员用户名设为 jayczee，同时设置了代理地址 (参考 <a href="/nas/basic/9-v2rayn.html" target="_blank">V2rayN &amp; V2rayA</a>)，方便镜像从 GitHub 上更快速抓取项目。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>moviepilot 容器启动后，需要等待一段时间。容器会从 GitHub 上抓取前后端代码进行编译，速度比较慢，可以从 Portainer 中查看容器 log 了解进度。即便 log 中已经显示了 web 服务的地址且能够访问，但在实际登录管理员账号时会提示 502 或 404 等错误。这实际上是由于容器中的后端服务尚未完全部署完毕。当时踩了这个坑很久，一度对自己产生怀疑。</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>moviepilot 内置了一个 nginx 来反向代理其中的 web 服务，修改上述的 NGINX_PORT 属性时，需要同步修改 ports 中的 target 与 published 端口。</p>
</div>
<p>安装完后界面大致如下（不包含影音资源）：</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-3.png" alt="MoviePilot" tabindex="0" loading="lazy"><figcaption>MoviePilot</figcaption></figure>
<h2>⚙️ 配置 Moviepilot</h2>
<h3>📥 下载器配置</h3>
<p>以之前部署的 Qbittorrent 为例，Moviepilot 左侧导航栏设定 -&gt; 系统 -&gt; 下载器，点击 + 号，选择 Qbittorrent，点击新跳出的选项卡：</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-4.png" alt="点击新建的选项卡" tabindex="0" loading="lazy"><figcaption>点击新建的选项卡</figcaption></figure>
<p>输入下载器对应的地址、用户名以及密码，可以选择勾选自动分类管理 (参考 <a href="/nas/qbit-category.html" target="_blank">Qbittorrent 自动分类</a>) 等选项。</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-5.png" alt="设置下载器相关参数" tabindex="0" loading="lazy"><figcaption>设置下载器相关参数</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>下载器的地址，如果 Moviepilot 没有使用 host 模式（默认配置是这样，使用 host 会占用比较多的端口），则需要进入 Portainer 查看网关（即宿主机）的内网 IP 地址，然后通过宿主机连接对应的下载器的地址。</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-6.png" alt="查看Moviepilot网关地址" tabindex="0" loading="lazy"><figcaption>查看Moviepilot网关地址</figcaption></figure>
<p>此处可以看到 Moviepilot 的网关的地址为 172.20.0.1，即通过该 IP 可以连通宿主机，若假设 Qbittorrent WebUI 在宿主机上的端口为 53000，则 Moviepilot 可以通过 172.20.0.1:53000 访问到 Qbittorrent。</p>
<p>所以此处填写 <a href="http://172.20.0.1:53000" target="_blank" rel="noopener noreferrer">http://172.20.0.1:53000</a></p>
</div>
<p>设置完后点击保存。</p>
<h3>📂 媒体目录配置</h3>
<p>需要设置媒体文件整体前（刚刚下载好，无元数据，杂乱的文件）的目录和整理后的目录（已重命名且刮削元数据的任务）。点击左侧导航栏设定 -&gt; 系统 -&gt; 存储 &amp; 目录 -&gt; 目录，点击现金目录，填写如下：</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-7.png" alt="目录填写" tabindex="0" loading="lazy"><figcaption>目录填写</figcaption></figure>
<p>如同先前在 jellyfin 中设置的媒体类型一项，电影选择“电影”即可，而电视剧、综艺以及动漫等有多季多期特征的资源选择“电视剧”，媒体类别选择“全部”，当然，如果想细分，可以选择对应的媒体类别。</p>
<p>下载/源存储选择<code>本地</code>，目录输入先前 Qbittorrent 配置的下载目录。</p>
<p>自动整理选择<code>目录监控</code>，每当 qbittorrent 下载新的媒体文件时都能自动进行整理。</p>
<p>监控模式选择<code>性能模式</code>。</p>
<p>目录输入一个自定义的文件整理后的目录。</p>
<p>整理方式选择硬链接 (相关文档: <a href="/linux/link.html" target="_blank">软硬链接的区别</a>)，覆盖模式选择保留最新文件。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>我个人的目录结构如下：</p>
<ul>
<li>电影下载保存地址： <code>/mnt/data_hdd1/download_movie</code></li>
<li>整理后地址：<code>/mnt/data_hdd1/movie</code></li>
</ul>
<p>-综艺下载保存地址： <code>/mnt/data_hdd1/download_tv</code></p>
<ul>
<li>
<p>整理后地址：<code>/mnt/data_hdd1/tv</code></p>
</li>
<li>
<p>动漫下载保存地址： <code>/mnt/data_hdd1/download_cartoon</code></p>
</li>
<li>
<p>整理后地址：<code>/mnt/data_hdd1/cartoon</code></p>
</li>
</ul>
</div>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-8.png" alt="整理前效果" tabindex="0" loading="lazy"><figcaption>整理前效果</figcaption></figure>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-9.png" alt="整理后效果" tabindex="0" loading="lazy"><figcaption>整理后效果</figcaption></figure>
<p>由于采用的是硬链接的方式，所以占用空间不会变大。填写完配置信息后点击保存。</p>
<h3>📺 媒体服务器配置</h3>
<p>首先访问 Jellyfin，点击控制台 -&gt; API 秘钥，创建一个 API 秘钥。</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-10.png" alt="Jellyfin创建API秘钥" tabindex="0" loading="lazy"><figcaption>Jellyfin创建API秘钥</figcaption></figure>
<p>Moviepilot 点击左边侧边栏设定 -&gt; 系统 -&gt; 媒体服务器，点击加号。</p>
<figure><img src="/assets/images/nas/moviepilot/moviepilot-11.png" alt="媒体服务器配置" tabindex="0" loading="lazy"><figcaption>媒体服务器配置</figcaption></figure>
<p>先前在 nginx 中配置了 jellyfin 外网访问地址，所以此处两个地址都填外网访问地址即可。API 秘钥填写 Jellyfin 中生成的秘钥。</p>
<p>至此，Moviepilot 配置完成，可以自动帮忙整理下载好的媒体文件。🎉</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/moviepilot/moviepilot-1.png" type="image/png"/>
    </item>
    <item>
      <title>Portainer 容器管理</title>
      <link>https://jayczee.cn/nas/basic/2-portainer.html</link>
      <guid>https://jayczee.cn/nas/basic/2-portainer.html</guid>
      <source url="https://jayczee.cn/rss.xml">Portainer 容器管理</source>
      <description>Portainer Logo 在中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。 🤔 为什么要使用 Portainer？ Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如Docker UI和Docker Desktop。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<img src="/assets/svg/portainer.svg" alt="Portainer Logo" style="width: 200px;">
<p>在<a href="/nas/basic/1-docker.html" target="_blank">上一篇文章 Docker</a>中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。</p>
<h3>🤔 为什么要使用 Portainer？</h3>
<p>Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如<a href="https://github.com/gohutool/docker.ui" target="_blank" rel="noopener noreferrer">Docker UI</a>和<a href="https://docs.docker.com/desktop/setup/install/windows-install/" target="_blank" rel="noopener noreferrer">Docker Desktop</a>。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它的使用率确实比较高。它可以方便地管理Docker镜像和容器，即便个人对其功能的使用程度仍然很低。虽然<code>docker pull</code>、<code>docker start</code>以及<code>docker stop</code>命令已经非常方便了，但谁能拒绝鼠标点点就能操作的诱惑呢（笑）？当然，新手小白们还是推荐先使用命令熟悉Docker，至少要知道戳戳点点背后的命令究竟是哪一条，才能更深入地理解。</p>
<figure><img src="/assets/images/nas/portainer/portainer-ui.png" alt="Portainer UI" tabindex="0" loading="lazy"><figcaption>Portainer UI</figcaption></figure>
<h3>📥 下载 Portainer</h3>
<p>首先访问<a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>，在上方搜索栏中搜索portainer-ce，下载的是Portainer的社区CE（Community Edition）版，它还有商业版可供选择 🛠️。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果没有登录Docker Hub，可能会转到登录页面，没有账号可以注册一个，毕竟后续会经常使用。</p>
</div>
<figure><img src="/assets/images/nas/portainer/portainer-i-step-1.png" alt="搜索Portainer CE镜像" tabindex="0" loading="lazy"><figcaption>搜索Portainer CE镜像</figcaption></figure>
<p>点击图片中的搜索结果后会跳转到portainer-ce的详情页，阅读详情，其中指向了Portainer的官网文档，这里直接把链接po出来: <a href="https://docs.portainer.io/start/install-ce/server/docker" target="_blank" rel="noopener noreferrer">官方文档</a>。根据自己的Docker安装方式选择具体选项。以下以<a href="https://docs.portainer.io/start/install-ce/server/docker/linux" target="_blank" rel="noopener noreferrer">Install Portainer CE with Docker on Linux</a>为例。</p>
<h3>🚀 安装 Portainer</h3>
<p>首先为Portainer创建一个专属volume：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> volume</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> portainer_data</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>然后在命令行中运行命令安装Portainer:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 8000:8000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 9443:9443</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> portainer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  --restart=always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> portainer_data:/data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> \</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  portainer/portainer-ce:2.21.5</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令解析如下：</p>
<ul>
<li><code>docker run</code>: 启动一个新的容器。</li>
<li><code>-d</code>: 以后台模式运行容器（分离模式）。</li>
<li><code>-p 8000:8000</code>: 将主机的8000端口映射到容器的8000端口。</li>
<li><code>-p 9443:9443</code>: 将主机的9443端口映射到容器的9443端口。</li>
<li><code>--name portainer</code>: 给容器指定一个名称为“portainer”。</li>
<li><code>--restart=always</code>: 设置容器在退出时总是重启。</li>
<li><code>-v /var/run/docker.sock:/var/run/docker.sock</code>: 将主机的Docker套接字挂载到容器内，以便容器能够与Docker引擎进行通信。</li>
<li><code>-v portainer_data:/data</code>: 创建一个名为“portainer_data”的卷，并将其挂载到容器内的<code>/data</code>目录，用于持久化存储数据。</li>
<li><code>portainer/portainer-ce:2.21.5</code>: 指定要使用的镜像及其版本，这里是Portainer Community Edition的2.21.5版本。</li>
</ul>
<p>此处需要注意的是，默认映射的9443端口是HTTPS端口，若需要HTTP端口，则需要多映射一个9000端口:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 9000:9000</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>安装完后，访问<a href="https://localhost:9443" target="_blank" rel="noopener noreferrer">https://localhost:9443</a>（HTTPS）或<a href="http://localhost:9000" target="_blank" rel="noopener noreferrer">http://localhost:9000</a>（HTTP），即可访问Portainer容器 🔑。</p>
<p>首次进入Portainer会被要求设置管理员账号密码，千万不要忘了，后续使用非常频繁。</p>
<h3>📊 Portainer UI 常用项</h3>
<p>此处介绍上面Portainer UI图中侧边导航栏几个常用项，前文提及个人使用程度也很浅，所以这里介绍个人的通常用法。</p>
<ul>
<li><strong>Stacks</strong>: 保存Docker Compose文件，用来快速创建/更新容器 📄。</li>
<li><strong>Containers</strong>: 管理当前已经创建的容器 🗃️。</li>
<li><strong>Images</strong>: 管理已下载的镜像 📥。</li>
<li><strong>Network</strong>: 管理已经创建的Docker Network。大部分时候使用的是bridge桥接或直接使用宿主机网络host，个别特殊情况会创建一个network供几个特别的容器进行通信 🔗。</li>
<li><strong>Volumes</strong>: 管理已创建的存储空间volume，这个使用得很少，一般都是定期查看删除没在使用的volume，可能还是学艺不精吧hhh 😂。</li>
</ul>
<p>此时点进Containers，会发现列表中已经存在刚刚创建的portainer-ce容器，但无法对其进行停止等操作，毕竟通过Portainer让它关闭自己肯定也是不愿意的吧（笑）😄。</p>
<p>后续的使用教程将通过部署服务来实践。</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/portainer/portainer-ui.png" type="image/png"/>
    </item>
    <item>
      <title>DDNS-GO 动态DNS</title>
      <link>https://jayczee.cn/nas/basic/3-ddns-go.html</link>
      <guid>https://jayczee.cn/nas/basic/3-ddns-go.html</guid>
      <source url="https://jayczee.cn/rss.xml">DDNS-GO 动态DNS</source>
      <description>📌 DDNS-GO的作用 此处引用官方README。 中文 | English 自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。 支持Mac、Windows、Linux系统，支持ARM、x86架构 支持的域名服务商：阿里云、腾讯云、Dnspod、Cloudflare、华为云、Callback、百度云、Porkbun、GoDad...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<h2>📌 DDNS-GO的作用</h2>
<p>此处引用官方README。<br>
中文 | <a href="https://github.com/jeessy2/ddns-go/blob/master/README_EN.md" target="_blank" rel="noopener noreferrer">English</a></p>
<p>自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。</p>
<ul>
<li>支持Mac、Windows、Linux系统，支持ARM、x86架构</li>
<li>支持的域名服务商：<code>阿里云</code>、<code>腾讯云</code>、<code>Dnspod</code>、<code>Cloudflare</code>、<code>华为云</code>、<code>Callback</code>、<code>百度云</code>、<code>Porkbun</code>、<code>GoDaddy</code>、<code>Namecheap</code>、<code>NameSilo</code>、<code>Dynadot</code></li>
<li>支持接口/网卡/<a href="https://github.com/jeessy2/ddns-go/wiki/%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%8E%B7%E5%8F%96IP%E5%8F%82%E8%80%83" target="_blank" rel="noopener noreferrer">命令</a>获取IP</li>
<li>支持以服务的方式运行</li>
<li>默认间隔5分钟同步一次</li>
<li>支持同时配置多个DNS服务商</li>
<li>支持多个域名同时解析</li>
<li>支持多级域名</li>
<li>网页中配置，简单又方便，默认勾选<code>禁止从公网访问</code></li>
<li>网页中方便快速查看最近50条日志</li>
<li>支持Webhook通知</li>
<li>支持TTL</li>
<li>支持部分DNS服务商<a href="https://github.com/jeessy2/ddns-go/wiki/%E4%BC%A0%E9%80%92%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0" target="_blank" rel="noopener noreferrer">传递自定义参数</a>，实现地域解析/多IP等功能</li>
</ul>
<h2>⚙️ 前提</h2>
<p>拥有一个域名，无需备案即可。</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/ddns-go/ddns-1.png" type="image/png"/>
    </item>
    <item>
      <title>Certbot 自动获取HTTPS证书</title>
      <link>https://jayczee.cn/nas/basic/4-certbot.html</link>
      <guid>https://jayczee.cn/nas/basic/4-certbot.html</guid>
      <source url="https://jayczee.cn/rss.xml">Certbot 自动获取HTTPS证书</source>
      <description>Certbot 是一个 开源工具，用于自动化获取和管理 SSL/TLS 证书，主要与 Let&amp;apos;s Encrypt 配合使用。它简化了 HTTPS 加密的配置过程，使网站管理员能够轻松为他们的网站启用安全连接。Certbot 能够自动续订证书，减少手动操作的需要，从而提高安全性和便利性。它支持多种操作系统和 Web 服务器，用户只需通过命令行界面进行简单...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p>Certbot 是一个 <strong>开源工具</strong>，用于自动化获取和管理 <strong>SSL/TLS 证书</strong>，主要与 <strong>Let's Encrypt</strong> 配合使用。它简化了 HTTPS 加密的配置过程，使网站管理员能够轻松为他们的网站启用安全连接。Certbot 能够自动续订证书，减少手动操作的需要，从而提高安全性和便利性。它支持多种操作系统和 Web 服务器，用户只需通过命令行界面进行简单的配置即可。</p>
<h2>🌐 动态 DNS 解析</h2>
<p>在上一篇 <a href="/nas/basic/3-ddns-go.html" target="_blank">DDNS-GO</a> 中，已经配置了动态 DNS 解析，实现了将域名与 NAS 的动态公网 IP 进行绑定。访问 NAS 上的服务大多数情况下都是通过 Web 进行的，因此使用 HTTPS 进行安全加密是非常重要的。而且某些互联网服务限制必须使用 HTTPS URL 才能使用（例如对接国外电商平台时填写的 webhook URL）。</p>
<p>国内各大云服务商都有付费证书的选项，但对于个人 NAS 使用，免费的 <strong>Let's Encrypt</strong> 签发的证书即可满足需求。</p>
<h3>🛠️ 域名服务商配置</h3>
<ul>
<li>若域名服务商是 <strong>阿里云</strong>，可以参考项目 <a href="https://github.com/justjavac/certbot-dns-aliyun" target="_blank" rel="noopener noreferrer">certbot-dns-aliyun</a> 进行实现。</li>
<li>若域名服务商不是阿里云，则需要寻找 <code>certbot-dns-</code> 对应服务商的插件，每个服务商的认证流程都不一样。</li>
</ul>
<p>该插件的作用在于协助 Certbot 认证该域名是否在名下。以阿里云插件为例，根据上述 GitHub 项目文档配置完阿里云插件后，会要求填写账号的 <strong>Access Key</strong> 和 <strong>Access Token</strong>（具体申请步骤参考 <a href="/nas/basic/3-ddns-go.md/#%E9%85%8D%E7%BD%AEddns-go" target="_blank">配置 DDNS-GO</a>）。</p>
<p>若不想使用插件，可以使用 <strong>dns-01</strong> 认证来完成该流程，从而申请到证书，步骤如下。</p>
<h2>🚀 安装 Certbot</h2>
<h3>使用 apt 安装 Certbot</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certbot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>📝 运行申请命令</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">certbot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certonly</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "*.example.com"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --manual</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --preferred-challenges</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dns-01</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 改成自己的域名</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li><code>certbot certonly</code>：表示仅获取证书，不自动配置 Web 服务器。</li>
<li><code>-d "*.example.com"</code>：表示申请一个通配符证书，适用于所有子域名。</li>
<li><code>--manual</code>：表示手动验证域名所有权。</li>
<li><code>--preferred-challenges dns-01</code>：指定使用 DNS-01 挑战方式进行域名验证。</li>
</ul>
<h3>📜 结果示例</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># certbot certonly -d "*.example.com" -d example.com --manual --preferred-challenges dns-01</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Saving</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> log</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/log/letsencrypt.log</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">It</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> contains</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> these</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> names:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> example.com</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Please</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> DNS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TXT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> record</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> under</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> name:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">_acme-challenge.******.com.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> following</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> value:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">obhvT0vzlPQANt0XsCHj5xGOj2YUacKnlprinGpfwCg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Before</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> continuing,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> verify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TXT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> record</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> has</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> been</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deployed.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Depending</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> DNS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">provider,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> may</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> take</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> some</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> time,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> few</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> seconds</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multiple</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> minutes.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> You</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> can</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> has</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> finished</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> deploying</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> aid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> online</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tools,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> such</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Google</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Admin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Toolbox:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://toolbox.googleapps.com/apps/dig/#TXT/_acme-challenge.diaoan.xyz.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Look</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> one</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bolded</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">below</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> line</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ANSWER.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> It</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> should</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">value(s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) you ve just added.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> -</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">***Press Enter to Continue***</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上述结果，需要在域名服务商处添加一条 <strong>TXT</strong> 类型的解析记录，并且值为 Certbot 给出的值。<strong>添加完后再按 Enter 继续</strong>，之后 Certbot 会验证是否存在该解析记录，若验证成功，Certbot 会继续创建证书。</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Successfully</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> received</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certificate.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> saved</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> at:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/live/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">******</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/fullchain.pem</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> saved</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> at:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">         /etc/letsencrypt/live/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">******</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/privkey.pem</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> expires</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 2025-4-13.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">These</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> files</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> updated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> when</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> renews.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">NEXT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> STEPS:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> will</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> renewed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> automatically.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Autorenewal</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --manual</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> certificates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> requires</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> authentication</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hook</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (--manual-auth-hook) but one was not provided. To renew this certificate, repeat this same certbot command before the certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'s expiry date.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>证书创建完成并保存到了对应目录。</p>
<h2>⚠️ 提示</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><strong>DNS-01</strong> 是一种用于域名所有权验证的挑战类型。在使用 SSL 证书申请时，证书颁发机构需要确认申请者对域名的控制权。DNS-01 挑战的具体步骤如下：</p>
<ol>
<li><strong>生成挑战</strong>：请求证书时，证书颁发机构会生成一个特定的挑战字符串。</li>
<li><strong>添加 DNS 记录</strong>：在 DNS 管理界面中添加一条 <strong>TXT</strong> 记录，记录的名称通常是 <code>_acme-challenge</code>，内容为颁发机构提供的挑战字符串。</li>
<li><strong>等待 DNS 传播</strong>：添加记录后，可能需要一些时间让 DNS 记录传播。</li>
<li><strong>验证</strong>：证书颁发机构会查询 DNS 记录，检查是否存在正确的 <strong>TXT</strong> 记录。如果存在且内容匹配，则证明对该域名的控制权。</li>
<li><strong>颁发证书</strong>：验证通过后，颁发机构将颁发 SSL 证书。</li>
</ol>
</div>
<p><strong>DNS-01</strong> 挑战的优点是可以用于申请通配符证书，而其他验证方式（如 <strong>HTTP-01</strong>）则无法实现这一点。</p>
<h2>🔄 证书续期</h2>
<p>证书即将到期时重新运行上述命令即可，会重新申请 3 个月期的新证书，不再需要中间步骤。因此也可以将申请命令加入 <strong>crontab</strong>，每 80 天自动运行一次，即可实现自动续期。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nginx 反向代理</title>
      <link>https://jayczee.cn/nas/basic/5-nginx.html</link>
      <guid>https://jayczee.cn/nas/basic/5-nginx.html</guid>
      <source url="https://jayczee.cn/rss.xml">Nginx 反向代理</source>
      <description>在 Nginx 中，可以将各个服务使用不同的二级域名反向代理到公网，配合防火墙仅暴露服务器的小部分端口，从而提高安全性。💡 PS：当初年少不懂事，曾将所有端口暴露到公网，包括 服务，结果被某位法国大兄弟在短短三四个小时内吸干了机场流量。想想自己当初将代理端口无加密暴露到公网，真是个狼人的操作。🐺 🚀 通过 Portainer Stacks 安装 ...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p>在 Nginx 中，可以将各个服务使用不同的二级域名反向代理到公网，配合防火墙仅暴露服务器的小部分端口，从而提高安全性。💡 PS：当初年少不懂事，曾将所有端口暴露到公网，包括 <a href="/nas/basic/9-v2rayn.html" target="_blank">V2rayN 代理</a> 服务，结果被某位法国大兄弟在短短三四个小时内吸干了机场流量。想想自己当初将代理端口无加密暴露到公网，真是个狼人的操作。🐺</p>
<h2>🚀 通过 Portainer Stacks 安装 Nginx</h2>
<p>与 <a href="/nas/basic/3-ddns-go.html" target="_blank">DDNS-GO</a> 中的做法相同，采用在 Portainer Stacks 中添加 Docker Compose 文件的方式部署 Nginx 容器。以下是 Docker Compose 文件的示例：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">services:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  nginx:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    restart:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    container_name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    image:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/conf.d:/etc/nginx/conf.d</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/nginx.conf:/etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt:/etc/letsencrypt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /var/log/nginx:/var/log/nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    environment:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NGINX_PORT=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">80</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">      -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    privileged:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    network_mode:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> host</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>📜 文件中参数定义如下：</h3>
<ol>
<li><strong>重启策略</strong>：设置为 <code>always</code>，表示如果容器停止，Docker 会自动重启它。</li>
<li><strong>容器名称</strong>：指定容器的名称为 <code>nginx</code>。</li>
<li><strong>镜像</strong>：使用官方的 <code>nginx</code> 镜像。</li>
<li><strong>挂载卷</strong>：
<ul>
<li>将主机的 <code>/etc/nginx/conf.d</code> 目录挂载到容器的 <code>/etc/nginx/conf.d</code>，用于配置文件。</li>
<li>将主机的 <code>/etc/nginx/nginx.conf</code> 文件挂载到容器的 <code>/etc/nginx/nginx.conf</code>，用于主配置文件。</li>
<li>将主机的 <code>/etc/letsencrypt</code> 目录挂载到容器的 <code>/etc/letsencrypt</code>，用于 SSL 证书。</li>
<li>将主机的 <code>/var/log/nginx</code> 目录挂载到容器的 <code>/var/log/nginx</code>，用于日志文件。</li>
</ul>
</li>
<li><strong>环境变量</strong>：
<ul>
<li><code>NGINX_PORT</code> 设置为 80，指定 Nginx 监听的端口。</li>
<li><code>TZ</code> 设置为 <code>Asia/Shanghai</code>，指定时区。</li>
</ul>
</li>
<li><strong>特权模式</strong>：设置为 <code>true</code>，允许容器获得额外的权限。</li>
<li><strong>网络模式</strong>：设置为 <code>host</code>，表示容器将使用主机的网络栈，容器和主机共享网络。</li>
</ol>
<p>与其他镜像不同的是，部署 Nginx 容器时，容器中并没有一个 <code>/etc/nginx/nginx.conf</code> 主配置文件（大部分镜像都会存在一个默认配置文件，直接将其映射到宿主机，在其基础上进行修改）。在此情况下，若直接部署 Nginx 镜像，容器会报错配置文件不存在。因此，需要在宿主机上创建一个主配置文件，并将其映射到容器内部。</p>
<h3>💡 Tips</h3>
<p>当宿主机的 A 文件（文件夹）与容器的 B 文件（文件夹）创建映射关系时，可能产生的结果如下：</p>
<ol>
<li><strong>A存在，B不存在</strong>：Docker 会在容器内创建一个空目录 B，并将宿主机的 A 目录挂载到 B 上。容器内的 B 目录将显示 A 的内容。</li>
<li><strong>A存在，B存在</strong>：Docker 会将宿主机的 A 目录挂载到容器内的 B 目录，容器内的 B 目录内容将与宿主机的 A 目录相同。容器内 B 的原有内容将被隐藏，但不会删除。</li>
<li><strong>A不存在，B不存在</strong>：Docker 会在容器内创建一个空目录 B，因为没有宿主机的 A 进行挂载。</li>
<li><strong>A不存在，B存在</strong>：容器内的 B 目录将保持不变，Docker 不会对其进行任何操作，B 的内容不会与宿主机的 A 进行关联。</li>
</ol>
<h3>🔑 总结</h3>
<p>挂载时，宿主机的目录优先级高于容器内的目录，宿主机的内容会覆盖容器内的内容。</p>
<h3>📝 创建配置文件 <code>/etc/nginx/nginx.conf</code></h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">worker_processes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">events</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        worker_connections</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 768</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # multi_accept on;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        sendfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        tcp_nopush</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        types_hash_max_size</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2048</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/mime.types</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        default_type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> application/octet-stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        ssl_protocols</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1.3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Dropping SSLv3, ref: POODLE</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        ssl_prefer_server_ciphers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        client_max_body_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 8192M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/conf.d/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/nginx/sites-enabled/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>📂 创建文件夹 <code>/etc/nginx/conf.d</code></h3>
<p>在其中创建 <code>portainer.conf</code> 文件，写入如下内容：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> portainer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> localhost:9000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">       12120</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ssl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  portainer.domain.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 二级域名改为 portainer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    # 证书</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/live/domain.com/fullchain.pem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_certificate_key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/live/domain.com/privkey.pem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_session_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 5m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_protocols</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> TLSv1.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_ciphers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_prefer_server_ciphers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_http_version</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Upgrade</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $http_upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Connection</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "upgrade"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http://portainer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>🔍 各部分的解释：</h3>
<ol>
<li><strong>upstream portainer</strong>: 定义了一个名为 <code>portainer</code> 的上游服务器，指向 <code>localhost:9002</code>，即 Portainer 服务运行的地址。</li>
<li><strong>server { ... }</strong>: 定义了一个 Nginx 服务器块，包含监听的端口和域名等配置。</li>
<li><strong>listen 12120 ssl;</strong>: 指定服务器监听 12120 端口，并启用 SSL。</li>
<li><strong>server_name <a href="http://portainer.domain.com" target="_blank" rel="noopener noreferrer">portainer.domain.com</a>;</strong>: 指定该服务器块的域名为 <code>portainer.domain.com</code>。</li>
<li><strong>ssl_certificate 和 ssl_certificate_key</strong>: 指定 SSL 证书和私钥的路径，用于加密 HTTPS 连接。</li>
<li><strong>ssl_session_timeout 5m;</strong>: 设置 SSL 会话的超时时间为 5 分钟。</li>
<li><strong>ssl_protocols 和 ssl_ciphers</strong>: 配置支持的 SSL/TLS 协议和加密套件，以增强安全性。</li>
<li><strong>location / { ... }</strong>: 配置了一个位置块，处理对根路径的请求。
<ul>
<li><strong>proxy_http_version 1.1;</strong>: 设置代理的 HTTP 版本为 1.1。</li>
<li><strong>proxy_set_header Upgrade $http_upgrade;</strong>: 设置 <code>Upgrade</code> 头，以支持 WebSocket。</li>
<li><strong>proxy_set_header Connection "upgrade";</strong>: 设置 <code>Connection</code> 头，指示连接升级。</li>
<li><strong>proxy_pass <a href="http://portainer" target="_blank" rel="noopener noreferrer">http://portainer</a>;</strong>: 将请求转发到上游定义的 <code>portainer</code> 服务器。</li>
</ul>
</li>
</ol>
<p>总体来说，该配置文件将来自 <code>portainer.domain.com</code> 的 HTTPS 请求通过 Nginx 反向代理到本地的 Portainer 服务，并确保连接的安全性。🔒</p>
<h3>🔄 最后步骤</h3>
<p>在服务器上重启 Docker 中的 Nginx：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>访问 <code>https://portainer.domain.com:12120</code>，即可通过域名访问到 Portainer 容器。🌍</p>
<h3>📋 模板使用</h3>
<p>以上的 Portainer 容器反向代理配置文件可以作为一个模板，大部分服务都可以按照该模板进行配置。🛠️ 只有某些服务需要添加一些额外配置，这类服务在官方文档中一般都有说明，查找官方文档即可。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Samba 文件共享服务配置</title>
      <link>https://jayczee.cn/nas/basic/6-samba.html</link>
      <guid>https://jayczee.cn/nas/basic/6-samba.html</guid>
      <source url="https://jayczee.cn/rss.xml">Samba 文件共享服务配置</source>
      <description>📖 什么是 Samba？ Samba 是一个开源项目，允许在 Linux 和 Windows 系统之间共享文件和打印机。它实现了 SMB/CIFS 协议，使得不同操作系统之间能够无缝地进行文件共享。Samba 被广泛应用于家庭和企业网络中，可以轻松地将 Linux 服务器或 NAS (网络附属存储) 变成文件共享服务器。 🚀 Samba 的优势 跨...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<h2>📖 什么是 Samba？</h2>
<p><strong>Samba</strong> 是一个开源项目，允许在 Linux 和 Windows 系统之间共享文件和打印机。它实现了 SMB/CIFS 协议，使得不同操作系统之间能够无缝地进行文件共享。Samba 被广泛应用于家庭和企业网络中，可以轻松地将 Linux 服务器或 NAS (网络附属存储) 变成文件共享服务器。</p>
<h2>🚀 Samba 的优势</h2>
<ul>
<li><strong>跨平台支持</strong>：Samba 使得 Windows 和 Linux 系统之间的文件共享变得简单，用户可以在不同的操作系统上访问共享文件。</li>
<li><strong>权限管理</strong>：通过 Samba，用户可以灵活地设置文件和目录的访问权限，确保数据安全。</li>
<li><strong>易于配置</strong>：Samba 提供了简单的配置文件，用户可以根据需求快速进行设置。</li>
</ul>
<h2>🛠️ 使用 Docker 部署 Samba</h2>
<p>通过 Docker 部署 Samba 是一种便捷的方式，可以快速搭建文件共享服务。以下是一个基本的 Docker Compose 配置示例，用于启动 Samba 服务。</p>
<h3>Docker Compose 配置</h3>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  samba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">dperson/samba</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">samba</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"137:137"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"138:138"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"139:139"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"445:445"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt:/mnt</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">USERID=0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">GROUPID=0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SAMBA_USER=root</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SAMBA_PASS=</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">-u "root" -s "mnt:/mnt:rw"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>配置说明</h3>
<ul>
<li><strong>image</strong>: 使用 <code>dperson/samba</code> 镜像，这个镜像是一个轻量级的 Samba 服务器。</li>
<li><strong>container_name</strong>: 设置容器的名称为 <code>samba</code>，便于管理。</li>
<li><strong>ports</strong>: 映射 Samba 服务的端口，以便外部访问：
<ul>
<li><code>137</code>: NetBIOS 名称服务</li>
<li><code>138</code>: NetBIOS 数据报服务</li>
<li><code>139</code>: NetBIOS 会话服务</li>
<li><code>445</code>: SMB/CIFS 服务</li>
</ul>
</li>
<li><strong>volumes</strong>: 将宿主机的 <code>/mnt</code> 目录挂载到容器内的 <code>/mnt</code> 目录，允许共享文件。我通常会将NAS的机械硬盘挂在到宿主机的/mnt,此处直接同步挂载到容器的/mnt内，保证容器也能访问后面添加的硬盘。</li>
<li><strong>environment</strong>: 设置环境变量以配置 Samba 用户：
<ul>
<li><code>USERID</code> 和 <code>GROUPID</code> 设置为 <code>0</code>，表示使用 root 用户。</li>
<li><code>SAMBA_USER</code> 设置为 <code>root</code>，表示 Samba 用户名。</li>
<li><code>SAMBA_PASS</code> 设置为空，表示不设置密码（可根据需要修改）。</li>
</ul>
</li>
<li><strong>command</strong>: 指定 Samba 的启动命令，<code>-u "root"</code> 表示使用 root 用户，<code>-s "mnt:/mnt:rw"</code> 表示共享 <code>/mnt</code> 目录，并设置为可读写。</li>
</ul>
<h2>⚠️ 注意事项</h2>
<ul>
<li><strong>安全性</strong>：在生产环境中，不建议使用 root 用户和空密码。应创建专用用户并设置强密码。此处我使用samba服务仅为了内网机器互相连接，为了我可以在个人PC上方便管理NAS的文件，所以没有设置密码。</li>
<li><strong>防火墙设置</strong>：确保宿主机的防火墙允许 Samba 服务的端口访问。</li>
</ul>
<h2>🔍 访问 Samba 共享</h2>
<ol>
<li>
<p><strong>启动 Docker 容器</strong>：<br>
在Portainer的Stack Web Editor中添加上述配置文件，点击Deploy the stack部署samba docker服务。</p>
</li>
<li>
<p><strong>访问 Samba 共享</strong>：</p>
<ul>
<li>Windows 系统中，可以在文件资源管理器中输入 <code>\\&lt;宿主机IP&gt;\mnt</code> 访问共享文件夹。</li>
<li>Linux 系统中，可以使用命令行挂载 Samba 共享：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mount</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cifs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> //</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">宿主机I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">P&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /mnt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> username=root,password=</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ul>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Qbittorrent BT下载</title>
      <link>https://jayczee.cn/nas/basic/7-qbittorrent.html</link>
      <guid>https://jayczee.cn/nas/basic/7-qbittorrent.html</guid>
      <source url="https://jayczee.cn/rss.xml">Qbittorrent BT下载</source>
      <description>qBittorrent 是一个开源的 BitTorrent 客户端，旨在提供一个用户友好的界面和丰富的功能。它支持多种操作系统，包括 Windows、macOS 和 Linux。qBittorrent 不仅可以下载种子文件，还支持磁力链接，并内置搜索功能，方便用户查找和下载内容。✨ 将以下 docker compose 配置文件复制进 Stack，点击...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>qBittorrent</strong> 是一个开源的 BitTorrent 客户端，旨在提供一个用户友好的界面和丰富的功能。它支持多种操作系统，包括 <strong>Windows</strong>、<strong>macOS</strong> 和 <strong>Linux</strong>。qBittorrent 不仅可以下载种子文件，还支持磁力链接，并内置搜索功能，方便用户查找和下载内容。✨</p>
<p>将以下 <strong>docker compose</strong> 配置文件复制进 <strong>Stack</strong>，点击 <strong>Deploy the stack</strong> 进行部署。</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  qbittorrent_data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  qbittorrent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">lscr.io/linuxserver/qbittorrent:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">qbittorrent</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">PUID=0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">PGID=0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">WEBUI_PORT=53000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">qbittorrent_data:/config</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt:/mnt</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">53000:53000</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">53001:6881</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">53001:6881/udp</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">unless-stopped</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>📌 配置说明</h3>
<ul>
<li><strong>services</strong>: 定义服务，这里只有一个 <code>qbittorrent</code> 服务。
<ul>
<li><strong>image</strong>: 使用 <code>lscr.io/linuxserver/qbittorrent:latest</code> 镜像，这是一个维护良好的 qBittorrent 镜像。</li>
<li><strong>container_name</strong>: 设置容器名称为 <code>qbittorrent</code>，便于管理。</li>
<li><strong>environment</strong>: 设置环境变量：
<ul>
<li><code>PUID</code> 和 <code>PGID</code>: 设置为 <code>0</code>，表示使用 root 用户（可根据需要修改为非特权用户）。</li>
<li><code>TZ</code>: 设置时区为 <code>Asia/Shanghai</code>。</li>
<li><code>WEBUI_PORT</code>: 设置 Web 界面的端口为 <code>53000</code>。</li>
</ul>
</li>
<li><strong>volumes</strong>: 挂载存储卷：
<ul>
<li><code>qbittorrent_data:/config</code>: 将持久化存储卷挂载到容器的 <code>/config</code> 目录。</li>
<li><code>/mnt:/mnt</code>: 将宿主机的 <code>/mnt</code> 目录挂载到容器内，方便下载文件的访问。</li>
</ul>
</li>
<li><strong>ports</strong>: 映射端口：
<ul>
<li><code>53000:53000</code>: 映射 Web UI 端口。</li>
<li><code>53001:6881</code> &amp; <code>53001:6881/udp</code>: 映射 BitTorrent 的传输端口。</li>
</ul>
</li>
<li><strong>restart</strong>: 设置重启策略为 <code>unless-stopped</code>，即除非手动停止，否则容器会自动重启。</li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>注意</strong>: 此处新建了一个 volume <code>qbittorrent_data</code> 来映射容器内的 <code>/config</code> 文件夹，这种情况下，<code>/config</code> 文件夹并没有映射到宿主机的某个具体路径，而是交由 Docker 管理，这样可以避免破坏该文件。此外，若删除容器后重新部署，若先前创建的 <code>qbittorrent_data</code> 仍在，则可以继承先前容器的数据。🔄</p>
</blockquote>
<h3>🌐 可选配置</h3>
<p>部署完容器后，使用 <strong>nginx</strong> 将 qBittorrent 服务进行反向代理，以下是 nginx 反向代理配置：</p>
<div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">server{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    listen </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    server_name </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">qbit.domain.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    ssl_certificate </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/etc/letsencrypt/live/jayczee.top/fullchain.pem;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    ssl_certificate_key </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/etc/letsencrypt/live/jayczee.top/privkey.pem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      proxy_pass </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             http://localhost:53000/;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      proxy_http_version </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">     1.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      proxy_set_header </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">       X-Forwarded-Host        $</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">      http2_push_preload </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># Enable http2 push</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处 nginx 监听 <strong>12120</strong> 端口。可以让所有 nginx 的反向代理配置都监听同一端口，通过监听不同的 servername，即不同的二级域名来代理到不同的服务。🔑</p>
<blockquote>
<p><strong>为什么不是 80 端口或 443 端口？</strong> 使用家庭宽带时，通常运营商会封禁家庭宽带的 80 和 443 端口，无法使用，因此需要使用其他端口。推荐使用 1000 及以上的端口号，以避免与其他服务冲突。</p>
</blockquote>
<h3>🌐 BT传输端口</h3>
<p>浏览器访问 <a href="https://qbit.domain.com:12120" target="_blank" rel="noopener noreferrer">https://qbit.domain.com:12120</a> 或 <a href="http://localhost:53000" target="_blank" rel="noopener noreferrer">http://localhost:53000</a>（若没有进行 nginx 配置），即可访问 qBittorrent WebUI。如图所示：</p>
<figure><img src="/assets/images/nas/qbittorrent/qbit-1.png" alt="qBittorrent管理界面" tabindex="0" loading="lazy"><figcaption>qBittorrent管理界面</figcaption></figure>
<p>打开左上角工具 → 选项，弹出的设置对话框中选择连接，确保用于传入连接的端口是在 docker compose 配置中宿主机映射的 BitTorrent 的传输端口，如图所示：</p>
<figure><img src="/assets/images/nas/qbittorrent/qbit-2.png" alt="qBittorrent配置窗口" tabindex="0" loading="lazy"><figcaption>qBittorrent配置窗口</figcaption></figure>
<p>之后qBittorrent客户端将使用该端口与其他用户进行通信。</p>
<h3>🎉 完成部署</h3>
<p>至此，qBittorrent 的部署工作基本完成。后续将依靠它来下载影音资源到 NAS 服务器中。📥</p>
<h3>📚 相关文章</h3>
<ul>
<li><a href="/nas/qbit-category.html" target="_blank">qBittorrent 分类管理</a></li>
</ul>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/qbittorrent/qbit-1.png" type="image/png"/>
    </item>
    <item>
      <title>Jellyfin 媒体服务器</title>
      <link>https://jayczee.cn/nas/basic/8-jellyfin.html</link>
      <guid>https://jayczee.cn/nas/basic/8-jellyfin.html</guid>
      <source url="https://jayczee.cn/rss.xml">Jellyfin 媒体服务器</source>
      <description>Jellyfin是一款免费的影音服务器，支持通过Web直接播放，同时提供Android App客户端、iOS App客户端以及安卓TV客户端，方便用户管理自己的影音资源并在任何设备上进行观看，功能非常强大。 Web客户端海报墙Web客户端海报墙 🛠️ Jellyfin安装Docker Compose配置 以下是Jellyfin的Docker Comp...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p>Jellyfin是一款<strong>免费的影音服务器</strong>，支持通过Web直接播放，同时提供<strong>Android App客户端</strong>、<strong>iOS App客户端</strong>以及<strong>安卓TV客户端</strong>，方便用户管理自己的影音资源并在任何设备上进行观看，功能非常强大。</p>
<figure><img src="/assets/images/nas/jellyfin/j-1.png" alt="Web客户端海报墙" tabindex="0" loading="lazy"><figcaption>Web客户端海报墙</figcaption></figure>
<h2>🛠️ Jellyfin安装Docker Compose配置</h2>
<p>以下是Jellyfin的Docker Compose安装配置示例：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'3.8'</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jellyfin_config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  jellyfin_cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> jellyfin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nyanmisaka/jellyfin:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">always</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_DRIVER_CAPABILITIES=all</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_VISIBLE_DEVICES=all</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   network_mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">host</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin_config:/config</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">jellyfin_cache:/cache</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt/data_hdd:/data_hdd</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 该映射是影音文件存储位置，可根据实际情况调整</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/mnt/nas1_smb:/nas1_smb</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 该映射是影音文件存储位置，可根据实际情况调整</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">     - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/dev:/dev</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   runtime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nvidia</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">     resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">       reservations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">         devices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">           - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">capabilities</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">gpu</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Jellyfin的Docker镜像有许多修改版本，此处选择了<code>nyanmisaka/jellyfin</code>，该镜像支持Web串流H265格式的影片。</p>
</div>
<p>创建了两个volume，分别为<code>jellyfin_config</code>和<code>jellyfin_cache</code>，用于存储Jellyfin自身的配置文件。</p>
<p>该Docker Compose文件有几个特别之处：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_DRIVER_CAPABILITIES=all</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">NVIDIA_VISIBLE_DEVICES=all</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>与最后的</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">     resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">       reservations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">         devices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">           - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">capabilities</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">             - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">gpu</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使该镜像能够调用宿主机上的NVIDIA显卡（例如，搭载NVIDIA GTX 1060显卡的笔记本电脑），从而更好地完成编码与解码工作。若NAS没有搭载N卡，则可以移除上述内容，镜像仍然能够使用CPU的核显进行编解码工作。若NAS不自带任何显卡，则不推荐在该NAS上部署Jellyfin，以免影响后续的影音观看体验。</p>
<p>推荐在客户端上安装<strong>Infuse</strong>等支持多种影片格式的播放器，结合之前的<a href="/nas/basic/6-samba.html" target="_blank"><strong>Samba文件共享服务</strong></a>，让客户端能够访问到NAS中存储的影片进行直接播放。注意：如影片质量较高（例如4K高码率），建议在内网下进行播放，以确保流畅度，因为此时客户端播放器相当于直接下载服务器源文件，无法调整画质，观看体验会受到服务器性能的影响。</p>
<p>关于Jellyfin编码与解码的详细内容，请参考<a href="/nas/jellyfin-encode-decode.html" target="_blank"><strong>Jellyfin编码与解码</strong></a>。</p>
<p>成功部署镜像后，访问<code>https://NASIP:8096</code>即可访问Jellyfin服务。初次访问需要设置语言、管理员账号密码等信息。元数据刮削等设置可保持默认即可，该部分功能将在<a href="/nas/basic/10-movie-pilot.html" target="_blank"><strong>Moviepilot</strong></a>中实现。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>安装完后可以先不进行下列设置，直接跳转到<a href="/nas/basic/10-movie-pilot.html" target="_blank"><strong>Moviepilot</strong></a>进行部署与配置，然后再回来进行媒体库相关的配置。</p>
</div>
<h2>📂 添加媒体库</h2>
<ol>
<li>
<p>点击左上角 -&gt; 控制台 -&gt; 媒体库 -&gt; 点击添加媒体库：</p>
<figure><img src="/assets/images/nas/jellyfin/j-2.png" alt="Jellyfin 添加媒体库" tabindex="0" loading="lazy"><figcaption>Jellyfin 添加媒体库</figcaption></figure>
</li>
<li>
<p>选择内容类型。若类型为<code>电影</code>，则该文件夹中保存的即为电影类型的资源。对于电视剧、综艺、动漫等多季（Season）、多集（Ep）的媒体资源，在创建媒体库时统一选择<code>电视剧</code>类型。</p>
<figure><img src="/assets/images/nas/jellyfin/j-3.png" alt="Jellyfin 媒体库类型" tabindex="0" loading="lazy"><figcaption>Jellyfin 媒体库类型</figcaption></figure>
</li>
<li>
<p>添加媒体库文件夹。选择对应类型的媒体资源存放的文件夹（此处选择的文件夹是容器内的位置，需确保容器外影音资源的存储位置已成功映射到容器内）。每个媒体库可添加多个文件夹。</p>
</li>
</ol>
<p>其他设置保持默认即可，无需关心Jellyfin本身的刮削功能，因其效果不佳。保存后可点击扫描媒体库立即刷新媒体资源。</p>
<h2>⚙️ 设置硬件转码</h2>
<ol>
<li>点击左上角 -&gt; 控制台 -&gt; 播放 -&gt; 转码：</li>
</ol>
<p>根据显卡类型选择对应转码方式，N卡选择Nvidia NVENC，Intel核显选择QSV，AMD核显选择V4L2，其他的ARM CPU（如树莓派等）可选择V4L2。下方的转码勾选可以自行搜索支持的转码类型进行勾选。选择完后滚动到最下方选择保存。</p>
<figure><img src="/assets/images/nas/jellyfin/j-4.png" alt="Jellyfin 转码配置" tabindex="0" loading="lazy"><figcaption>Jellyfin 转码配置</figcaption></figure>
<p>通过以上步骤，Jellyfin的设置将更加完整，确保最佳的影音体验！🌟</p>
<h2>Nginx配置</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    listen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1212</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## 外网访问端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    server_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> jellyfin.domain.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## 自定义jellyfin二级域名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    client_max_body_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 20M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    set</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $jellyfin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 127.0.0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_certificate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/live/domain.com/fullchain.pem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ssl_certificate_key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/letsencrypt/live/domain.com/privkey.pem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## 配置证书地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Frame-Options</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "SAMEORIGIN"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-XSS-Protection</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Content-Type-Options</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "nosniff"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cross-Origin-Opener-Policy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "same-origin"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cross-Origin-Embedder-Policy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "require-corp"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cross-Origin-Resource-Policy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "same-origin"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Permissions-Policy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "accelerometer=(), ambient-light-sensor=(), battery=(), bluetooth=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), gamepad=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), keyboard-map=(), local-fonts=(), magnetometer=(), microphone=(), payment=(), publickey-credentials-get=(), serial=(), sync-xhr=(), usb=(), xr-spatial-tracking=()"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Origin-Agent-Cluster</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "?1"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> always</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 302</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">:1212/web/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">## 别忘了修改外网访问端口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        # Proxy main Jellyfin traffic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$jellyfin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">:8096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Real-IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-For</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Proto</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Protocol</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $http_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_buffering</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /web/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$jellyfin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">:8096/web/index.html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Real-IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-For</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Proto</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Protocol</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $http_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /socket</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> http://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$jellyfin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">:8096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_http_version</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Upgrade</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $http_upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Connection</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "upgrade"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Real-IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-For</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Proto</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Protocol</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X-Forwarded-Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $http_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/jellyfin/j-1.png" type="image/png"/>
    </item>
    <item>
      <title>V2ray &amp; v2rayA代理</title>
      <link>https://jayczee.cn/nas/basic/9-v2rayn.html</link>
      <guid>https://jayczee.cn/nas/basic/9-v2rayn.html</guid>
      <source url="https://jayczee.cn/rss.xml">V2ray &amp; v2rayA代理</source>
      <description>V2Ray是一款强大的网络代理工具，旨在帮助用户实现科学上网，突破网络限制。它支持多种传输协议和加密方式，具有高度的灵活性和可扩展性，非常适合用于搭建个人代理服务器。而V2rayA则是一款可以通过Web访问的V2Ray管理面板。 🛠️ 安装 V2Ray 首先，需要在NAS宿主机上安装V2Ray，V2rayA仅仅是一款管理工具，并不包含核心的V2Ray...</description>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
      <content:encoded><![CDATA[<p>V2Ray是一款<strong>强大的网络代理工具</strong>，旨在帮助用户实现<strong>科学上网</strong>，突破网络限制。它支持多种传输协议和加密方式，具有高度的灵活性和可扩展性，非常适合用于搭建个人代理服务器。而<strong>V2rayA</strong>则是一款可以通过Web访问的V2Ray管理面板。</p>
<h2>🛠️ 安装 V2Ray</h2>
<p>首先，需要在NAS宿主机上安装V2Ray，V2rayA仅仅是一款管理工具，并不包含核心的V2Ray。</p>
<h3>🔗 相关链接</h3>
<ul>
<li><a href="https://github.com/v2fly/v2ray-core/releases" target="_blank" rel="noopener noreferrer">Github V2ray Releases</a></li>
<li><a href="https://v2raya.org/docs/prologue/installation/docker/" target="_blank" rel="noopener noreferrer">V2rayA Document</a></li>
</ul>
<p>根据NAS的CPU架构选择对应的版本进行下载，可以通过网页下载并传输到指定目录，或使用<code>wget</code>命令获取。以<code>5.24.0 linux amd64</code>版本为例：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/v2fly/v2ray-core/releases/download/v5.24.0/v2ray-linux-64.zip</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 下载文件到当前目录</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /usr/local/v2ray-core/</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 创建文件夹</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> unzip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> v2ray-linux-64.zip</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /usr/local/v2ray-core/</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # 解压文件到指定目录</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行以下命令检查是否安装成功：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/usr/local/v2ray-core/v2ray</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>如果安装成功，将会出现V2Ray操作命令提示。</p>
<h2>🖥️ 安装 V2rayA</h2>
<p>接下来，安装V2rayA，Docker Compose文件如下：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'3.8'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  v2raya</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">mzz2017/v2raya</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">v2raya</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"2017:2017"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"50170-50172:50170-50172"</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/usr/local/v2ray-core/v2ray=/usr/local/bin/v2ray</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">V2RAYA_LOG_FILE=/tmp/v2raya.log</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    volumes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/etc/v2raya:/etc/v2raya</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">always</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此配置中，管理面板端口为<code>2017</code>，而<code>50170-50172</code>是自定义选择的代理端口范围，可以映射3个（或更多）端口用于开放不同协议的代理端口（如http、https以及socks5）。</p>
<p>确保刚刚安装的V2Ray (<code>/usr/local/v2ray-core/v2ray</code>) 映射到V2rayA目录下 (<code>/usr/local/bin/v2ray</code>)。</p>
<h3>🎉 部署完成后</h3>
<p>访问<code>http://NASIP:2017</code>，选择<strong>subscription</strong>，点击<strong>导入</strong>，输入机场的订阅地址：</p>
<figure><img src="/assets/images/nas/v2ray/v-1.png" alt="配置订阅地址" tabindex="0" loading="lazy"><figcaption>配置订阅地址</figcaption></figure>
<p>在V2rayA从订阅地址下载完节点信息后，界面如下：</p>
<figure><img src="/assets/images/nas/v2ray/v-2.png" alt="节点信息" tabindex="0" loading="lazy"><figcaption>节点信息</figcaption></figure>
<p>在操作列中，点击选择想要使用的节点（可多选），选择完成后，左上角点击<strong>启动</strong>，即可启动代理。</p>
<figure><img src="/assets/images/nas/v2ray/v-3.png" alt="选择节点并启动代理" tabindex="0" loading="lazy"><figcaption>选择节点并启动代理</figcaption></figure>
<p>右侧的<strong>Proxy</strong>按钮可以设置负载均衡策略，其中<code>ProbeUrl</code>用于检测节点时延，保持不变即可，目前类型仅支持最小时延优先。</p>
<figure><img src="/assets/images/nas/v2ray/v-4.png" alt="负载均衡策略设置" tabindex="0" loading="lazy"><figcaption>负载均衡策略设置</figcaption></figure>
<p>右上角的设置按钮中可以进行代理规则相关的设置。刚刚在Docker Compose中映射的端口为<code>50170-50172</code>，但默认代理端口并非这三个端口，需要进行修改。点击<strong>设置</strong> -&gt; <strong>地址与端口</strong>，修改各种代理协议的端口为所需的端口。</p>
<figure><img src="/assets/images/nas/v2ray/v-5.png" alt="设置界面" tabindex="0" loading="lazy"><figcaption>设置界面</figcaption></figure>
<figure><img src="/assets/images/nas/v2ray/v-6.png" alt="地址与端口界面" tabindex="0" loading="lazy"><figcaption>地址与端口界面</figcaption></figure>
<h3>⚙️ 代理规则设置</h3>
<p>此处规则代理，<strong>系统代理</strong>选择<strong>关闭</strong>，因为仅选择性使用代理。在需要代理时，将代理地址设置为本机的对应代理端口，不需要服务代理所有的系统请求。</p>
]]></content:encoded>
      <enclosure url="https://jayczee.cn/assets/images/nas/v2ray/v-1.png" type="image/png"/>
    </item>
    <item>
      <title>Alist 私有云盘</title>
      <link>https://jayczee.cn/nas/optional/alist.html</link>
      <guid>https://jayczee.cn/nas/optional/alist.html</guid>
      <source url="https://jayczee.cn/rss.xml">Alist 私有云盘</source>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
    </item>
    <item>
      <title>Beszel 服务器仪表盘</title>
      <link>https://jayczee.cn/nas/optional/beszel.html</link>
      <guid>https://jayczee.cn/nas/optional/beszel.html</guid>
      <source url="https://jayczee.cn/rss.xml">Beszel 服务器仪表盘</source>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
    </item>
    <item>
      <title>Chatgpt 对话面板</title>
      <link>https://jayczee.cn/nas/optional/gpt.html</link>
      <guid>https://jayczee.cn/nas/optional/gpt.html</guid>
      <source url="https://jayczee.cn/rss.xml">Chatgpt 对话面板</source>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
    </item>
    <item>
      <title>Teamspeak 私有语音服务器</title>
      <link>https://jayczee.cn/nas/optional/teamspeak.html</link>
      <guid>https://jayczee.cn/nas/optional/teamspeak.html</guid>
      <source url="https://jayczee.cn/rss.xml">Teamspeak 私有语音服务器</source>
      <category>NAS</category>
      <pubDate>Fri, 10 Jan 2025 06:48:26 GMT</pubDate>
    </item>
  </channel>
</rss>