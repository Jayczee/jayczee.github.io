import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as n,b as s,d as a,e as o,f as r,r as d,o as p}from"./app-D2iFtlzY.js";const h={};function c(g,e){const i=d("RouteLink");return p(),t("div",null,[e[12]||(e[12]=n('<h2 id="ddns-go的作用" tabindex="-1"><a class="header-anchor" href="#ddns-go的作用"><span>DDNS-GO的作用</span></a></h2><p>此处引用官方README。<br> 中文 | <a href="https://github.com/jeessy2/ddns-go/blob/master/README_EN.md" target="_blank" rel="noopener noreferrer">English</a></p><p>自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。</p><ul><li><a href="#%E7%89%B9%E6%80%A7">特性</a></li><li><a href="#%E7%B3%BB%E7%BB%9F%E4%B8%AD%E4%BD%BF%E7%94%A8">系统中使用</a></li><li><a href="#docker%E4%B8%AD%E4%BD%BF%E7%94%A8">Docker中使用</a></li><li><a href="#%E4%BD%BF%E7%94%A8ipv6">使用IPv6</a></li><li><a href="#webhook">Webhook</a></li><li><a href="#callback">Callback</a></li><li><a href="#%E7%95%8C%E9%9D%A2">界面</a></li><li><a href="#%E5%BC%80%E5%8F%91%E8%87%AA%E8%A1%8C%E7%BC%96%E8%AF%91">开发&amp;自行编译</a></li></ul><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><ul><li>支持Mac、Windows、Linux系统，支持ARM、x86架构</li><li>支持的域名服务商 <code>阿里云</code> <code>腾讯云</code> <code>Dnspod</code> <code>Cloudflare</code> <code>华为云</code> <code>Callback</code> <code>百度云</code> <code>Porkbun</code> <code>GoDaddy</code> <code>Namecheap</code> <code>NameSilo</code> <code>Dynadot</code></li><li>支持接口/网卡/<a href="https://github.com/jeessy2/ddns-go/wiki/%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%8E%B7%E5%8F%96IP%E5%8F%82%E8%80%83" target="_blank" rel="noopener noreferrer">命令</a>获取IP</li><li>支持以服务的方式运行</li><li>默认间隔5分钟同步一次</li><li>支持同时配置多个DNS服务商</li><li>支持多个域名同时解析</li><li>支持多级域名</li><li>网页中配置，简单又方便，默认勾选<code>禁止从公网访问</code></li><li>网页中方便快速查看最近50条日志</li><li>支持Webhook通知</li><li>支持TTL</li><li>支持部分DNS服务商<a href="https://github.com/jeessy2/ddns-go/wiki/%E4%BC%A0%E9%80%92%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0" target="_blank" rel="noopener noreferrer">传递自定义参数</a>，实现地域解析/多IP等功能</li></ul><h2 id="前提" tabindex="-1"><a class="header-anchor" href="#前提"><span>前提</span></a></h2><p>拥有一个域名，没备案的即可。</p><h2 id="部署ddns-go容器" tabindex="-1"><a class="header-anchor" href="#部署ddns-go容器"><span>部署DDNS-GO容器</span></a></h2>',9)),s("p",null,[e[1]||(e[1]=a("在")),o(i,{to:"/nas/basic/2-portainer.html"},{default:r(()=>e[0]||(e[0]=[a("Portainer 容器管理")])),_:1}),e[2]||(e[2]=a("中，我们已经完成了Portainer的安装，接下来我们将使用已经部署portainer容器完成ddns-go服务的安装。"))]),e[13]||(e[13]=n(`<p>首先在<a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>中搜索ddns-go,找到官方image（一般都是下载量最高那个，但是有时候三方修改过的镜像也不错），这里直接po出地址：<br><a href="https://hub.docker.com/r/jeessy/ddns-go" target="_blank" rel="noopener noreferrer">jeessy/ddns-go</a><br> 这里推荐直接在hub的页面中查看作者自己写的文档，里面有详细的安装步骤与说明，虽然我在写自己的doc，但还是推荐优先看官方文档，doc只做汇总或一些额外的说明。<br> 官方文档只给出了docker run的安装命令，此处额外给出docker compose的安装方式，并且使用之前安装portainer进行管理。（如果你坚持使用docker run，可以直接在nas上运行）。</p><h3 id="docker-run-安装" tabindex="-1"><a class="header-anchor" href="#docker-run-安装"><span>Docker run 安装</span></a></h3><p>docker run命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ddns-go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=always</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --net=host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/ddns-go:/root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jeessy/ddns-go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此处挂载的-v /opt/ddns-go:/root 是ddns-go的配置文件，他将配置文件映射到你/opt/ddns-go下，可自行修改。</p><h3 id="docker-compose-安装" tabindex="-1"><a class="header-anchor" href="#docker-compose-安装"><span>Docker compose 安装</span></a></h3><p>访问你的portainer管理面板，点击左边的Stacks，：<br><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-1.png" alt="Portainer Stack List" loading="lazy"><br> 点击右上角的Add Stack，来到Create Stack界面：<br><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-2.png" alt="Portainer Create Stack" loading="lazy"></p><p>为当前正在创建的Stack定义一个名称，例如ddns-go，注意首字母小写的规则。<br> 下方的Build method选择默认的Web editor，然后在editor内填写下面的内容：</p><div class="language-docker line-numbers-mode" data-highlighter="shiki" data-ext="docker" data-title="docker" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">services:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ddns-go:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image: jeessy/ddns-go</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    container_name: ddns-go</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    restart: always</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    network_mode: host</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - /opt/ddns-go:/root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，保持其他选项为默认设置，点击下方的Deploy the stack进行容器部署。</p><h2 id="配置ddns-go" tabindex="-1"><a class="header-anchor" href="#配置ddns-go"><span>配置DDNS-GO</span></a></h2><p>容器安装完后，访问<a href="http://xn--nasip-r52h415u:9876" target="_blank" rel="noopener noreferrer">http://你的nasip:9876</a>，进入ddns-go的配置页面。<br><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-3.png" alt="DDNS-GO配置页" loading="lazy"></p><p>选择你的域名服务商，通常都是你域名购买的地方，此处以阿里云为例。<br> 访问阿里云控制面板，点击右上角个人头像，选择Access Key。<br><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-4.png" alt="点击Access Key" loading="lazy"></p><p>在目标页面中，创建一对Access Key和Access Secret。但是阿里云一般会推荐创建RAM用户AccessKey，二者皆可。获取到AccessKey和Secret后将其填入上述表单中，TTL选择自动或10分钟（阿里云免费DNS解析一般是十分钟，若购买了过付费版，则可以选择对应时间）。</p><p>最后，根据你的公网IP使用情况，在IPV4项或IPV6项中的Domains中添加自己的解析记录，获取IP方式选择通过接口获取即可。如果同时拥有公网ipv4和公网ipv6，那么俩IPV4和IPV6的DDNS可以同时启用。</p>`,15)),s("p",null,[e[4]||(e[4]=a("解析记录根据你的实际情况添加，")),e[5]||(e[5]=s("a",{href:"http://xn--portainer-k99p186d203a2v4fomsat9a.domain.com",target:"_blank",rel:"noopener noreferrer"},"比如想要通过portainer.domain.com",-1)),e[6]||(e[6]=a("（domain.com为购买的实际域名）访问已部署的portainer,")),e[7]||(e[7]=s("a",{href:"http://xn--portainer-pl6nh7dp1mba03wpvkgno2w5cror7x7d151fda.domain.com",target:"_blank",rel:"noopener noreferrer"},"则可以直接在输入框中输入portainer.domain.com",-1)),e[8]||(e[8]=a(",")),e[9]||(e[9]=s("a",{href:"http://xn--portainer-927nn75b18xix9ak01iuhai1b.domain.com:9000",target:"_blank",rel:"noopener noreferrer"},"这样就可以通过portainer.domain.com:9000",-1)),e[10]||(e[10]=a("（portainer端口）直接访问。你的上游DNS服务器将直接把portainer.domain.com解析为你的公网IP。但是一般这样一个服务添加一条解析记录非常麻烦，所以一般我们直接添加一条*.domain.com，这样可以将任何域名下的二级域名解析到NAS上，同时配合NGINX反向代理，将不同的二级域名代理到不同服务上")),o(i,{to:"/nas/basic/5-nginx.html"},{default:r(()=>e[3]||(e[3]=[a("相关链接：Nginx反向代理")])),_:1}),e[11]||(e[11]=a("。"))]),e[14]||(e[14]=s("p",null,"最后设置完后，左下角先点击保存，然后点击右上角日志进行查看，检查是否成功添加DNS解析记录。",-1))])}const b=l(h,[["render",c],["__file","3-ddns-go.html.vue"]]),u=JSON.parse(`{"path":"/nas/basic/3-ddns-go.html","title":"DDNS-GO 动态DNS","lang":"zh-CN","frontmatter":{"title":"DDNS-GO 动态DNS","order":3,"category":["docker","ddns-go","教程"],"description":"DDNS-GO的作用 此处引用官方README。 中文 | English 自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。 特性 系统中使用 Docker中使用 使用IPv6 Webhook Callback 界面 开发&自行编译 特性 支持Mac、Windows、Linux系统，支持ARM、x86架构 支持的域名服务商 阿里...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/nas/basic/3-ddns-go.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"DDNS-GO 动态DNS"}],["meta",{"property":"og:description","content":"DDNS-GO的作用 此处引用官方README。 中文 | English 自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。 特性 系统中使用 Docker中使用 使用IPv6 Webhook Callback 界面 开发&自行编译 特性 支持Mac、Windows、Linux系统，支持ARM、x86架构 支持的域名服务商 阿里..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-13T06:29:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-13T06:29:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDNS-GO 动态DNS\\",\\"image\\":[\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-1.png\\",\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-2.png\\",\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-3.png\\",\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/ddns-4.png\\"],\\"dateModified\\":\\"2025-01-13T06:29:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.github.io\\"}]}"]]},"headers":[{"level":2,"title":"DDNS-GO的作用","slug":"ddns-go的作用","link":"#ddns-go的作用","children":[{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]}]},{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"部署DDNS-GO容器","slug":"部署ddns-go容器","link":"#部署ddns-go容器","children":[{"level":3,"title":"Docker run 安装","slug":"docker-run-安装","link":"#docker-run-安装","children":[]},{"level":3,"title":"Docker compose 安装","slug":"docker-compose-安装","link":"#docker-compose-安装","children":[]}]},{"level":2,"title":"配置DDNS-GO","slug":"配置ddns-go","link":"#配置ddns-go","children":[]}],"git":{"createdTime":1736491706000,"updatedTime":1736749781000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":3,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":4.13,"words":1239},"filePathRelative":"nas/basic/3-ddns-go.md","localizedDate":"2025年1月10日","excerpt":"<h2>DDNS-GO的作用</h2>\\n<p>此处引用官方README。<br>\\n中文 | <a href=\\"https://github.com/jeessy2/ddns-go/blob/master/README_EN.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">English</a></p>\\n<p>自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务。</p>\\n<ul>\\n<li><a href=\\"#%E7%89%B9%E6%80%A7\\">特性</a></li>\\n<li><a href=\\"#%E7%B3%BB%E7%BB%9F%E4%B8%AD%E4%BD%BF%E7%94%A8\\">系统中使用</a></li>\\n<li><a href=\\"#docker%E4%B8%AD%E4%BD%BF%E7%94%A8\\">Docker中使用</a></li>\\n<li><a href=\\"#%E4%BD%BF%E7%94%A8ipv6\\">使用IPv6</a></li>\\n<li><a href=\\"#webhook\\">Webhook</a></li>\\n<li><a href=\\"#callback\\">Callback</a></li>\\n<li><a href=\\"#%E7%95%8C%E9%9D%A2\\">界面</a></li>\\n<li><a href=\\"#%E5%BC%80%E5%8F%91%E8%87%AA%E8%A1%8C%E7%BC%96%E8%AF%91\\">开发&amp;自行编译</a></li>\\n</ul>","autoDesc":true}`);export{b as comp,u as data};
