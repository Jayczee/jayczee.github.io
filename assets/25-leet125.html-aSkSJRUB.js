import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as n,o as t}from"./app-DXs7qa2N.js";const l={};function o(r,e){return t(),s("div",null,e[0]||(e[0]=[n(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/valid-palindrome/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 125 - 验证回文串</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 <strong>回文串</strong> 。</p><p>字母和数字都属于字母数字字符。</p><p>给你一个字符串 <code>s</code>，如果它是 <strong>回文串</strong>，返回 <code>true</code> ；否则，返回 <code>false</code>。</p><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例 1</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;A man, a plan, a canal: Panama&quot;</code></li><li><strong>输出</strong>: <code>true</code></li><li><strong>解释</strong>: <code>&quot;amanaplanacanalpanama&quot;</code> 是回文串。</li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;race a car&quot;</code></li><li><strong>输出</strong>: <code>false</code></li><li><strong>解释</strong>: <code>&quot;raceacar&quot;</code> 不是回文串。</li></ul><h3 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例 3</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot; &quot;</code></li><li><strong>输出</strong>: <code>true</code></li><li><strong>解释</strong>: 在移除非字母数字字符之后，<code>s</code> 是一个空字符串 <code>&quot;&quot;</code> 。由于空字符串正着反着读都一样，所以是回文串。</li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>1 &lt;= s.length &lt;= 2 * 10^5</code></li><li><code>s</code> 仅由可打印的 ASCII 字符组成</li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><ol><li><strong>预处理字符串</strong>：首先移除所有非字母数字字符，并将所有大写字符转换为小写字符。</li><li><strong>双指针验证</strong>：使用双指针从字符串的两端向中间移动，逐一比较字符是否相同。如果有任何一对字符不相同，则返回 <code>false</code>；如果所有字符都相同，则返回 <code>true</code>。</li></ol><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> boolean</span><span style="color:#DCDCAA;"> isPalindrome</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> s) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    s = </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replaceAll</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;[^a-zA-Z0-9]&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toLowerCase</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> left</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, right = </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">() - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (left &lt; right) {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(left) != </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(right)) {</span></span>
<span class="line"><span style="color:#C586C0;">            return</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            left++;</span></span>
<span class="line"><span style="color:#D4D4D4;">            right--;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,19)]))}const i=a(l,[["render",o]]),d=JSON.parse(`{"path":"/note/leet150/25-leet125.html","title":"125 验证回文串","lang":"zh-CN","frontmatter":{"title":"125 验证回文串","order":25,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode125","简单题","字符串","双指针"],"description":"🚀 相关链接 LeetCode 125 - 验证回文串 📜 描述 如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 回文串 。 字母和数字都属于字母数字字符。 给你一个字符串 s，如果它是 回文串，返回 true ；否则，返回 false。 💡 示例 示例 1 输入: s = \\"A...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/25-leet125.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"125 验证回文串"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 125 - 验证回文串 📜 描述 如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 回文串 。 字母和数字都属于字母数字字符。 给你一个字符串 s，如果它是 回文串，返回 true ；否则，返回 false。 💡 示例 示例 1 输入: s = \\"A..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T02:06:24.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode125"}],["meta",{"property":"article:tag","content":"简单题"}],["meta",{"property":"article:tag","content":"字符串"}],["meta",{"property":"article:tag","content":"双指针"}],["meta",{"property":"article:modified_time","content":"2025-05-26T02:06:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"125 验证回文串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-26T02:06:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 1","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]},{"level":3,"title":"示例 3","slug":"示例-3","link":"#示例-3","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1748225184000,"updatedTime":1748225184000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.33,"words":399},"filePathRelative":"note/leet150/25-leet125.md","localizedDate":"2025年5月26日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/valid-palindrome/description/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 125 - 验证回文串</a></p>\\n<h2>📜 描述</h2>\\n<p>如果在将所有大写字符转换为小写字符、并移除所有非字母数字字符之后，短语正着读和反着读都一样。则可以认为该短语是一个 <strong>回文串</strong> 。</p>","autoDesc":true}`);export{i as comp,d as data};
