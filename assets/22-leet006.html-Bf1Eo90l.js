import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as l}from"./app-zkxKMUJO.js";const o={};function p(t,s){return l(),n("div",null,s[0]||(s[0]=[e(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/zigzag-conversion/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 6 - Z 字形变换</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>将一个给定字符串 <code>s</code> 根据给定的行数 <code>numRows</code>，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 <code>&quot;PAYPALISHIRING&quot;</code> 行数为 <code>3</code> 时，排列如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span>P   A   H   N</span></span>
<span class="line"><span>A P L S I I G</span></span>
<span class="line"><span>Y   I   R</span></span></code></pre></div><p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>&quot;PAHNAPLSIIGYIR&quot;</code>。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#D4D4D4;">string </span><span style="color:#DCDCAA;">convert</span><span style="color:#D4D4D4;">(string s, </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> numRows);</span></span></code></pre></div><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例 1</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;PAYPALISHIRING&quot;</code>, <code>numRows = 3</code></li><li><strong>输出</strong>: <code>&quot;PAHNAPLSIIGYIR&quot;</code></li><li><strong>解释</strong>:<div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span>P   A   H   N</span></span>
<span class="line"><span>A P L S I I G</span></span>
<span class="line"><span>Y   I   R</span></span></code></pre></div></li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;PAYPALISHIRING&quot;</code>, <code>numRows = 4</code></li><li><strong>输出</strong>: <code>&quot;PINALSIGYAHRPI&quot;</code></li><li><strong>解释</strong>:<div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span>P     I    N</span></span>
<span class="line"><span>A   L S  I G</span></span>
<span class="line"><span>Y A   H R</span></span>
<span class="line"><span>P     I</span></span></code></pre></div></li></ul><h3 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例 3</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;A&quot;</code>, <code>numRows = 1</code></li><li><strong>输出</strong>: <code>&quot;A&quot;</code></li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>1 &lt;= s.length &lt;= 1000</code></li><li><code>s</code> 由英文字母（小写和大写）、<code>&#39;,&#39;</code> 和 <code>&#39;.&#39;</code> 组成</li><li><code>1 &lt;= numRows &lt;= 1000</code></li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><p><strong>模拟法</strong>：使用一个列表来存储每一行的字符串，然后按照 Z 字形排列的顺序将字符添加到对应的行中。最后将每一行的字符串拼接起来即可。使用一个flag来表示当前顺序是向下移动还是向上移动。</p><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> String</span><span style="color:#DCDCAA;"> convert</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> s, </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> numRows) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (numRows == </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> s;</span></span>
<span class="line"><span style="color:#569CD6;">    final</span><span style="color:#4EC9B0;"> List</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">StringBuilder</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">sbList</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#4EC9B0;"> ArrayList</span><span style="color:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; i &lt; numRows; i++) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        sbList</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">add</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">new</span><span style="color:#DCDCAA;"> StringBuilder</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> flag</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> currentRow</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; i &lt; </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">(); i++) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        sbList</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(currentRow).</span><span style="color:#DCDCAA;">append</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(i));</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (currentRow == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">            flag = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#C586C0;"> if</span><span style="color:#D4D4D4;"> (currentRow == numRows - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">            flag = -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">        currentRow += flag;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#4EC9B0;">    StringBuilder</span><span style="color:#9CDCFE;"> totalBuilder</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#DCDCAA;"> StringBuilder</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">StringBuilder</span><span style="color:#9CDCFE;"> sb</span><span style="color:#C586C0;"> :</span><span style="color:#D4D4D4;"> sbList) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        totalBuilder</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">append</span><span style="color:#D4D4D4;">(sb);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> totalBuilder</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,22)]))}const i=a(o,[["render",p]]),D=JSON.parse(`{"path":"/note/leet150/22-leet006.html","title":"6 Z 字形变换","lang":"zh-CN","frontmatter":{"title":"6 Z 字形变换","order":22,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode6","中等题","字符串"],"description":"🚀 相关链接 LeetCode 6 - Z 字形变换 📜 描述 将一个给定字符串 s 根据给定的行数 numRows，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 \\"PAYPALISHIRING\\" 行数为 3 时，排列如下： 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：\\"PAHNAPLSIIGYIR\\"。 请你实现这...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/22-leet006.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"6 Z 字形变换"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 6 - Z 字形变换 📜 描述 将一个给定字符串 s 根据给定的行数 numRows，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 \\"PAYPALISHIRING\\" 行数为 3 时，排列如下： 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：\\"PAHNAPLSIIGYIR\\"。 请你实现这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-23T01:53:21.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode6"}],["meta",{"property":"article:tag","content":"中等题"}],["meta",{"property":"article:tag","content":"字符串"}],["meta",{"property":"article:modified_time","content":"2025-05-23T01:53:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6 Z 字形变换\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-23T01:53:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 1","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]},{"level":3,"title":"示例 3","slug":"示例-3","link":"#示例-3","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1747965201000,"updatedTime":1747965201000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.42,"words":425},"filePathRelative":"note/leet150/22-leet006.md","localizedDate":"2025年5月23日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/zigzag-conversion/description/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 6 - Z 字形变换</a></p>\\n<h2>📜 描述</h2>\\n<p>将一个给定字符串 <code>s</code> 根据给定的行数 <code>numRows</code>，以从上往下、从左到右进行 Z 字形排列。</p>","autoDesc":true}`);export{i as comp,D as data};
