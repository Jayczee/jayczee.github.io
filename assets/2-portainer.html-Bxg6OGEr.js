import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as a,d as i,e as o,f as n,a as l,r as c,o as p}from"./app-C2uIixW-.js";const h="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='128'%20height='128'%20viewBox='0%200%20128%20128'%3e%3cg%20fill='%233bbced'%3e%3cpath%20d='M12.07%2051.78h-.67v3.45h.67zm2.86%200h-.67v3.45h.67zm3.9-6.57l-.68-1.18L6.78%2050.6l.68%201.18z'/%3e%3cpath%20d='m18.77%2045.21l.68-1.18l11.37%206.57l-.68%201.18z'/%3e%3cpath%20d='M32.83%2051.8v-1.36H1.67v1.36zm26.01%206.64h-1.76v11.58h1.76v-6.41c0-2.36%201.86-3.63%203.92-3.63v-1.73c-1.6%200-2.98.68-3.92%201.76zm11.34%201.6v-1.6h-2.61v-4.56H65.8v4.56h-1.73v1.6h1.73v9.99h1.76v-9.99zm18.25-3.94c.67%200%201.23-.55%201.23-1.27c0-.63-.58-1.21-1.23-1.21c-.72%200-1.26.58-1.26%201.21c0%20.72.55%201.27%201.26%201.27m-.9%2013.92h1.84V58.44h-1.84zm5.56%200h1.76v-6.16c0-2.61%201.45-3.93%203.79-3.88c1.93%200%202.98%201.13%202.98%203.43v6.61h1.76v-6.61c0-3.69-1.41-5.16-4.74-5.16c-1.58%200-2.86.58-3.79%201.58v-1.4h-1.76zm29.31-11.58h-1.76v11.58h1.76v-6.41c0-2.36%201.86-3.63%203.92-3.63v-1.73c-1.61%200-2.98.68-3.92%201.76zM10.97%2056.76H7.44v3.54h3.53zm-3.98%200H3.47v3.54H7v-3.54zm0%203.95H3.47v3.54H7v-3.54zm3.98%200H7.44v3.54h3.53zm3.96%200H11.4v3.54h3.53zm0-5.85H11.4v3.54h3.53z'/%3e%3cpath%20d='M20.49%2071.07V50.85h1.36v21.2c-.36-.41-.82-.71-1.36-.98m-2.32-.35V42.2h1.36v28.69c-.38-.18-1.31-.17-1.36-.17M5.25%2073.57c-1.66-1.23-2.76-3.19-2.76-5.42c0-1.18.31-2.35.9-3.36h11.64c.6%201.02.9%202.18.9%203.36c0%201.03-.13%202-.55%202.86c-.88-.85-2.18-1.21-3.49-1.21c-2.33%200-4.32%201.45-4.84%203.61c-.18-.02-.3-.03-.48-.03c-.46.01-.89.07-1.32.19m29.34-15.31c3.29%200%206%202.71%206%206.01c0%203.25-2.71%206.06-6%206.06c-1.76%200-3.32-.83-4.37-2.13v7.1h-1.76V58.44h1.76v1.9c1.06-1.27%202.61-2.08%204.37-2.08m.05%2010.32c2.34%200%204.11-2.03%204.11-4.33c0-2.35-1.76-4.26-4.11-4.26c-2.29%200-4.32%201.91-4.32%204.26c0%202.3%202.03%204.33%204.32%204.33m13.67%201.73c-3.29%200-6-2.81-6-6.06c0-3.29%202.71-6.01%206-6.01s6%202.71%206%206.01c0%203.25-2.71%206.06-6%206.06m0-10.32c-2.34%200-4.16%201.93-4.16%204.26c0%202.3%201.81%204.33%204.16%204.33s4.16-2.03%204.16-4.33c0-2.35-1.81-4.26-4.16-4.26m29.31%2010.32c-3.29%200-6-2.81-6-6.04c0-3.29%202.71-6.01%206-6.01c1.76%200%203.33.81%204.37%202.08v-1.9h1.76v11.63H82v-1.9c-1.07%201.29-2.61%202.14-4.38%202.14m-.06-1.73c2.29%200%204.32-2.03%204.32-4.33c0-2.35-2.03-4.26-4.32-4.26c-2.34%200-4.11%201.91-4.11%204.26c0%202.3%201.76%204.33%204.11%204.33m40.32-4.33v.83H107.8c.37%201.91%202.03%203.49%204.07%203.49c1.35%200%202.48-.67%203.21-1.61h2.18c-.96%202-3.04%203.34-5.39%203.34c-3.29%200-6-2.81-6-6.06c0-3.29%202.71-6.01%206-6.01s6.01%202.73%206.01%206.02m-6-4.26c-2.05%200-3.69%201.48-4.09%203.39h8.16c-.38-1.91-2.04-3.39-4.07-3.39'/%3e%3cpath%20d='M7.63%2074.1a4.65%204.65%200%200%201%204.52-3.58c1.41%200%202.68.63%203.54%201.63c.75-.52%201.65-.81%202.63-.81c2.56%200%204.64%202.08%204.64%204.64c0%20.53-.08%201.03-.25%201.51c.56.77.91%201.73.91%202.76c0%202.56-2.08%204.64-4.64%204.64c-1.13%200-2.16-.4-2.96-1.07a4.67%204.67%200%200%201-3.79%201.96a4.67%204.67%200%200%201-4.14-2.53c-.31.07-.63.1-.96.1c-2.56%200-4.66-2.08-4.66-4.64s2.08-4.64%204.66-4.64c.16%200%20.33%200%20.5.03'/%3e%3c/g%3e%3c/svg%3e",d={};function k(g,e){const r=c("RouteLink");return p(),s("div",null,[e[3]||(e[3]=a("img",{src:h},null,-1)),a("p",null,[e[1]||(e[1]=i("在")),o(r,{to:"/nas/basic/1-docker.html"},{default:n(()=>e[0]||(e[0]=[i("上一篇文章 Docker")])),_:1}),e[2]||(e[2]=i("中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。"))]),e[4]||(e[4]=l(`<p>为什么要使用Portainer？Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如<a href="https://github.com/gohutool/docker.ui" target="_blank" rel="noopener noreferrer">Docker UI</a>和<a href="https://docs.docker.com/desktop/setup/install/windows-install/" target="_blank" rel="noopener noreferrer">Docker Desktop</a>。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它的使用率确实比较高。它可以方便地管理Docker镜像和容器，即便个人对其功能的使用程度仍然很低。虽然<code>docker pull</code>、<code>docker start</code>以及<code>docker stop</code>命令已经非常方便了，但谁能拒绝鼠标点点就能操作的诱惑呢（笑）？当然，新手小白们还是推荐先使用命令熟悉Docker，至少要知道戳戳点点背后的命令究竟是哪一条，才能更深入地理解。</p><figure><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/portainer-ui.png" alt="Portainer UI" tabindex="0" loading="lazy"><figcaption>Portainer UI</figcaption></figure><p>首先访问<a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>，在上方搜索栏中搜索portainer-ce，下载的是Portainer的社区CE（Community Edition）版，它还有商业版可供选择 🛠️。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果没有登录Docker Hub，可能会转到登录页面，没有账号可以注册一个，毕竟后续会经常使用。</p></div><figure><img src="https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/portainer-i-step-1.png" alt="搜索Portainer CE镜像" tabindex="0" loading="lazy"><figcaption>搜索Portainer CE镜像</figcaption></figure><p>点击图片中的搜索结果后会跳转到portainer-ce的详情页，阅读详情，其中指向了Portainer的官网文档，这里直接把链接po出来: <a href="https://docs.portainer.io/start/install-ce/server/docker" target="_blank" rel="noopener noreferrer">官方文档</a>。根据自己的Docker安装方式选择具体选项。以下以<a href="https://docs.portainer.io/start/install-ce/server/docker/linux" target="_blank" rel="noopener noreferrer">Install Portainer CE with Docker on Linux</a>为例。</p><p>首先为Portainer创建一个专属volume：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> volume</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> portainer_data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后在命令行中运行命令安装Portainer:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8000:8000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9443:9443</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> portainer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --restart=always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> portainer_data:/data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  portainer/portainer-ce:2.21.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令解析如下：</p><ul><li><code>docker run</code>: 启动一个新的容器。</li><li><code>-d</code>: 以后台模式运行容器（分离模式）。</li><li><code>-p 8000:8000</code>: 将主机的8000端口映射到容器的8000端口。</li><li><code>-p 9443:9443</code>: 将主机的9443端口映射到容器的9443端口。</li><li><code>--name portainer</code>: 给容器指定一个名称为“portainer”。</li><li><code>--restart=always</code>: 设置容器在退出时总是重启。</li><li><code>-v /var/run/docker.sock:/var/run/docker.sock</code>: 将主机的Docker套接字挂载到容器内，以便容器能够与Docker引擎进行通信。</li><li><code>-v portainer_data:/data</code>: 创建一个名为“portainer_data”的卷，并将其挂载到容器内的<code>/data</code>目录，用于持久化存储数据。</li><li><code>portainer/portainer-ce:2.21.5</code>: 指定要使用的镜像及其版本，这里是Portainer Community Edition的2.21.5版本。</li></ul><p>此处需要注意的是，默认映射的9443端口是HTTPS端口，若需要HTTP端口，则需要多映射一个9000端口:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9000:9000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完后，访问<a href="https://localhost:9443" target="_blank" rel="noopener noreferrer">https://localhost:9443</a>（HTTPS）或<a href="http://localhost:9000" target="_blank" rel="noopener noreferrer">http://localhost:9000</a>（HTTP），即可访问Portainer容器 🔑。</p><p>首次进入Portainer会被要求设置管理员账号密码，千万不要忘了，后续使用非常频繁。</p><p>此处介绍上面Portainer UI图中侧边导航栏几个常用项，前文提及个人使用程度也很浅，所以这里介绍个人的通常用法。</p><ul><li><strong>Stacks</strong>: 保存Docker Compose文件，用来快速创建/更新容器 📄。</li><li><strong>Containers</strong>: 管理当前已经创建的容器 🗃️。</li><li><strong>Images</strong>: 管理已下载的镜像 📥。</li><li><strong>Network</strong>: 管理已经创建的Docker Network。大部分时候使用的是bridge桥接或直接使用宿主机网络host，个别特殊情况会创建一个network供几个特别的容器进行通信 🔗。</li><li><strong>Volumes</strong>: 管理已创建的存储空间volume，这个使用得很少，一般都是定期查看删除没在使用的volume，可能还是学艺不精吧hhh 😂。</li></ul><p>此时点进Containers，会发现列表中已经存在刚刚创建的portainer-ce容器，但无法对其进行停止等操作，毕竟通过Portainer让它关闭自己肯定也是不愿意的吧（笑）😄。</p><p>后续的使用教程将通过部署服务来实践。</p>`,20))])}const u=t(d,[["render",k],["__file","2-portainer.html.vue"]]),b=JSON.parse(`{"path":"/nas/basic/2-portainer.html","title":"Portainer 容器管理","lang":"zh-CN","frontmatter":{"title":"Portainer 容器管理","order":2,"category":["portainer","docker","教程"],"description":"在中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。 为什么要使用Portainer？Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如Docker UI和Docker Desktop。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它的使用率确实比较高。它可以方便地管理Do...","head":[["meta",{"property":"og:url","content":"https://jayczee.github.io/nas/basic/2-portainer.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"Portainer 容器管理"}],["meta",{"property":"og:description","content":"在中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。 为什么要使用Portainer？Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如Docker UI和Docker Desktop。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它的使用率确实比较高。它可以方便地管理Do..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/portainer-ui.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-13T06:29:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-13T06:29:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Portainer 容器管理\\",\\"image\\":[\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/portainer-ui.png\\",\\"https://blog-1302595532.cos.ap-shanghai.myqcloud.com/blog/portainer-i-step-1.png\\"],\\"dateModified\\":\\"2025-01-13T06:29:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1736491706000,"updatedTime":1736749781000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":3,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":3.4,"words":1020},"filePathRelative":"nas/basic/2-portainer.md","localizedDate":"2025年1月10日","excerpt":"<img src=\\"/assets/svg/portainer.svg\\"> \\n<p>在<a href=\\"/nas/basic/1-docker.html\\" target=\\"_blank\\">上一篇文章 Docker</a>中完成安装步骤后，可以开始着手第一个容器Portainer的部署 🚀。</p>\\n<p>为什么要使用Portainer？Portainer简单来说是一款Docker管理面板程序，相同的程序还有很多，例如<a href=\\"https://github.com/gohutool/docker.ui\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker UI</a>和<a href=\\"https://docs.docker.com/desktop/setup/install/windows-install/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker Desktop</a>。之所以选择Portainer，只是因为这是第一款使用的管理面板程序，其次它的使用率确实比较高。它可以方便地管理Docker镜像和容器，即便个人对其功能的使用程度仍然很低。虽然<code>docker pull</code>、<code>docker start</code>以及<code>docker stop</code>命令已经非常方便了，但谁能拒绝鼠标点点就能操作的诱惑呢（笑）？当然，新手小白们还是推荐先使用命令熟悉Docker，至少要知道戳戳点点背后的命令究竟是哪一条，才能更深入地理解。</p>","autoDesc":true}`);export{u as comp,b as data};
