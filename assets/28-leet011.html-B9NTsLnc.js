import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,o as t}from"./app-zkxKMUJO.js";const l={};function o(p,e){return t(),n("div",null,e[0]||(e[0]=[s(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/container-with-most-water/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 11 - 盛最多水的容器</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>给定一个长度为 <code>n</code> 的整数数组 <code>height</code>。有 <code>n</code> 条垂线，第 <code>i</code> 条线的两个端点是 <code>(i, 0)</code> 和 <code>(i, height[i])</code>。</p><p>找出其中的两条线，使得它们与 <code>x</code> 轴共同构成的容器可以容纳最多的水。</p><p>返回容器可以储存的最大水量。</p><p><strong>说明</strong>：你不能倾斜容器。</p><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例 1</span></a></h3><ul><li><strong>输入</strong>: <code>[1,8,6,2,5,4,8,3,7]</code></li><li><strong>输出</strong>: <code>49</code></li><li><strong>解释</strong>: 图中垂直线代表输入数组 <code>[1,8,6,2,5,4,8,3,7]</code>。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 <code>49</code>。</li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>height = [1,1]</code></li><li><strong>输出</strong>: <code>1</code></li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>n == height.length</code></li><li><code>2 &lt;= n &lt;= 10^5</code></li><li><code>0 &lt;= height[i] &lt;= 10^4</code></li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><p>使用<strong>双指针</strong>的方法来解决该问题。初始时，双指针分别指向数组的左右两端。计算当前双指针所指向的线构成的容器的面积，并更新最大面积。然后，将较短的那条线的指针向中间移动，继续计算面积，直到两个指针相遇。</p><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> int</span><span style="color:#DCDCAA;"> maxArea</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">[] height) {</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, j = </span><span style="color:#9CDCFE;">height</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> area</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (i &lt; j) {</span></span>
<span class="line"><span style="color:#4EC9B0;">        int</span><span style="color:#9CDCFE;"> tmpArea</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">min</span><span style="color:#D4D4D4;">(height[i], height[j]) * (j - i);</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (tmpArea &gt; area) {</span></span>
<span class="line"><span style="color:#D4D4D4;">            area = tmpArea;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (height[i] &lt; height[j]) {</span></span>
<span class="line"><span style="color:#D4D4D4;">            i++;</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            j--;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> area;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,18)]))}const i=a(l,[["render",o]]),d=JSON.parse(`{"path":"/note/leet150/28-leet011.html","title":"11 盛最多水的容器","lang":"zh-CN","frontmatter":{"title":"11 盛最多水的容器","order":28,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode11","中等题","双指针"],"description":"🚀 相关链接 LeetCode 11 - 盛最多水的容器 📜 描述 给定一个长度为 n 的整数数组 height。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i])。 找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。 返回容器可以储存的最大水量。 说明：你不能倾斜容器。 💡 示例 示例 1...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/28-leet011.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"11 盛最多水的容器"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 11 - 盛最多水的容器 📜 描述 给定一个长度为 n 的整数数组 height。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i])。 找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。 返回容器可以储存的最大水量。 说明：你不能倾斜容器。 💡 示例 示例 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T07:30:05.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode11"}],["meta",{"property":"article:tag","content":"中等题"}],["meta",{"property":"article:tag","content":"双指针"}],["meta",{"property":"article:modified_time","content":"2025-05-26T07:30:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11 盛最多水的容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-26T07:30:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 1","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1748244605000,"updatedTime":1748244605000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"note/leet150/28-leet011.md","localizedDate":"2025年5月26日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/container-with-most-water/description/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 11 - 盛最多水的容器</a></p>\\n<h2>📜 描述</h2>\\n<p>给定一个长度为 <code>n</code> 的整数数组 <code>height</code>。有 <code>n</code> 条垂线，第 <code>i</code> 条线的两个端点是 <code>(i, 0)</code> 和 <code>(i, height[i])</code>。</p>","autoDesc":true}`);export{i as comp,d as data};
