import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as l}from"./app-CnwXUOSJ.js";const o={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 151 - 反转字符串中的单词</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>给你一个字符串 <code>s</code> ，请你反转字符串中 <strong>单词</strong> 的顺序。</p><p><strong>单词</strong> 是由非空格字符组成的字符串。<code>s</code> 中使用至少一个空格将字符串中的 <strong>单词</strong> 分隔开。</p><p>返回 <strong>单词</strong> 顺序颠倒且 <strong>单词</strong> 之间用单个空格连接的结果字符串。</p><p><strong>注意</strong>：输入字符串 <code>s</code> 中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。</p><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><ul><li><strong>输入</strong>: <code>s = &quot;the sky is blue&quot;</code></li><li><strong>输出</strong>: <code>&quot;blue is sky the&quot;</code></li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot; hello world &quot;</code></li><li><strong>输出</strong>: <code>&quot;world hello&quot;</code></li><li><strong>解释</strong>: 反转后的字符串中不能存在前导空格和尾随空格。</li></ul><h3 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例 3</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;a good example&quot;</code></li><li><strong>输出</strong>: <code>&quot;example good a&quot;</code></li><li><strong>解释</strong>: 如果两个单词间有多余的空格，反转后的字符串需要将单词间的空格减少到仅有一个。</li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>1 &lt;= s.length &lt;= 10^4</code></li><li><code>s</code> 包含英文大小写字母、数字和空格 <code>&#39; &#39;</code></li><li><code>s</code> 中 <strong>至少存在一个</strong> 单词</li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><ol><li>去除字符串的前导和尾随空格。</li><li>反转整个字符串。</li><li>反转每个单词，并去除多余的空格。</li></ol><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> String</span><span style="color:#DCDCAA;"> reverseWords</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> s) {</span></span>
<span class="line"><span style="color:#4EC9B0;">    StringBuilder</span><span style="color:#9CDCFE;"> sb</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#DCDCAA;"> StringBuilder</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">trim</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">indexOf</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot; &quot;</span><span style="color:#D4D4D4;">) == -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">        return</span><span style="color:#9CDCFE;"> sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#9CDCFE;">    sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reverse</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> start</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; i &lt; </span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">(); i++) {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(i) == </span><span style="color:#CE9178;">&#39; &#39;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">            while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(i + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) == </span><span style="color:#CE9178;">&#39; &#39;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">                sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">deleteCharAt</span><span style="color:#D4D4D4;">(i + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#DCDCAA;">            reverse</span><span style="color:#D4D4D4;">(sb, start, i - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">            start = i + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (start &lt; </span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">() - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#DCDCAA;">        reverse</span><span style="color:#D4D4D4;">(sb, start, </span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">() - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> void</span><span style="color:#DCDCAA;"> reverse</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">StringBuilder</span><span style="color:#D4D4D4;"> sb, </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> start, </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> end) {</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (start &lt; end) {</span></span>
<span class="line"><span style="color:#4EC9B0;">        char</span><span style="color:#9CDCFE;"> temp</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(start);</span></span>
<span class="line"><span style="color:#9CDCFE;">        sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setCharAt</span><span style="color:#D4D4D4;">(start, </span><span style="color:#9CDCFE;">sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(end));</span></span>
<span class="line"><span style="color:#9CDCFE;">        sb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setCharAt</span><span style="color:#D4D4D4;">(end, temp);</span></span>
<span class="line"><span style="color:#D4D4D4;">        start++;</span></span>
<span class="line"><span style="color:#D4D4D4;">        end--;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,19)]))}const D=n(o,[["render",p]]),i=JSON.parse(`{"path":"/note/leet150/21-leet151.html","title":"151 反转字符串中的单词","lang":"zh-CN","frontmatter":{"title":"151 反转字符串中的单词","order":21,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode151","中等题","字符串"],"description":"🚀 相关链接 LeetCode 151 - 反转字符串中的单词 📜 描述 给你一个字符串 s ，请你反转字符串中 单词 的顺序。 单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。 返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。 注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/21-leet151.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"151 反转字符串中的单词"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 151 - 反转字符串中的单词 📜 描述 给你一个字符串 s ，请你反转字符串中 单词 的顺序。 单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。 返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。 注意：输入字符串 s 中可能会存在前导空格、尾随空格或者单词间的多个空..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-22T07:36:50.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode151"}],["meta",{"property":"article:tag","content":"中等题"}],["meta",{"property":"article:tag","content":"字符串"}],["meta",{"property":"article:modified_time","content":"2025-05-22T07:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"151 反转字符串中的单词\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-22T07:36:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]},{"level":3,"title":"示例 3","slug":"示例-3","link":"#示例-3","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1747899410000,"updatedTime":1747899410000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.55,"words":466},"filePathRelative":"note/leet150/21-leet151.md","localizedDate":"2025年5月22日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/reverse-words-in-a-string/description/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 151 - 反转字符串中的单词</a></p>\\n<h2>📜 描述</h2>\\n<p>给你一个字符串 <code>s</code> ，请你反转字符串中 <strong>单词</strong> 的顺序。</p>","autoDesc":true}`);export{D as comp,i as data};
