import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as l}from"./app-DhzwfMOa.js";const t={};function o(p,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/trapping-rain-water/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 042 - 接雨水</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><ul><li><strong>输入</strong>: <code>height = [0,1,0,2,1,0,1,3,2,1,2,1]</code></li><li><strong>输出</strong>: <code>6</code></li><li><strong>解释</strong>: 上面是由数组 <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code> 表示的高度图，在这种情况下，可以接 <code>6</code> 个单位的雨水（蓝色部分表示雨水）。</li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>height = [4,2,0,3,2,5]</code></li><li><strong>输出</strong>: <code>9</code></li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>n == height.length</code></li><li><code>1 &lt;= n &lt;= 2 * 10^4</code></li><li><code>0 &lt;= height[i] &lt;= 10^5</code></li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><ol><li><strong>双指针法</strong>： <ul><li>使用两个数组 <code>leftMax</code> 和 <code>rightMax</code> 分别记录每个位置的左边最大高度和右边最大高度。</li><li>对于每个位置，能接的雨水量等于 <code>min(leftMax[i], rightMax[i]) - height[i]</code>。</li><li>最终将所有位置的雨水量累加即为结果。</li></ul></li></ol><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> int</span><span style="color:#DCDCAA;"> trap</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">[] height) {</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> len</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">height</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#D4D4D4;">[] </span><span style="color:#9CDCFE;">leftMax</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#4EC9B0;"> int</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">height</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#D4D4D4;">[] </span><span style="color:#9CDCFE;">rightMax</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#4EC9B0;"> int</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">height</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#D4D4D4;">    leftMax[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] = height[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#D4D4D4;">    rightMax[len - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] = height[len - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> sum</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; i &lt; len; i++) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        leftMax[i] = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(leftMax[i - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], height[i]);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = len - </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">; i &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; i--) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        rightMax[i] = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(rightMax[i + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], height[i]);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#4EC9B0;">int</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; i &lt; len-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; i++) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        sum += </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">min</span><span style="color:#D4D4D4;">(leftMax[i], rightMax[i]) - height[i];</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> sum;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,14)]))}const i=e(t,[["render",o]]),D=JSON.parse(`{"path":"/note/leet150/16-leet042.html","title":"042 接雨水","lang":"zh-CN","frontmatter":{"title":"042 接雨水","order":16,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode042","困难题","动态规划"],"description":"🚀 相关链接 LeetCode 042 - 接雨水 📜 描述 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 💡 示例 输入: height = [0,1,0,2,1,0,1,3,2,1,2,1] 输出: 6 解释: 上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/16-leet042.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"042 接雨水"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 042 - 接雨水 📜 描述 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 💡 示例 输入: height = [0,1,0,2,1,0,1,3,2,1,2,1] 输出: 6 解释: 上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-22T02:42:06.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode042"}],["meta",{"property":"article:tag","content":"困难题"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:modified_time","content":"2025-05-22T02:42:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"042 接雨水\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-22T02:42:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1747881726000,"updatedTime":1747881726000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.17,"words":350},"filePathRelative":"note/leet150/16-leet042.md","localizedDate":"2025年5月22日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/trapping-rain-water/description/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 042 - 接雨水</a></p>\\n<h2>📜 描述</h2>\\n<p>给定 <code>n</code> 个非负整数表示每个宽度为 <code>1</code> 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p>","autoDesc":true}`);export{i as comp,D as data};
