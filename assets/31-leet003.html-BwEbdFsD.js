import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-zkxKMUJO.js";const o={};function t(p,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="🚀-相关链接" tabindex="-1"><a class="header-anchor" href="#🚀-相关链接"><span>🚀 相关链接</span></a></h2><p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">LeetCode 3 - 无重复字符的最长子串</a></p><h2 id="📜-描述" tabindex="-1"><a class="header-anchor" href="#📜-描述"><span>📜 描述</span></a></h2><p>给定一个字符串 <code>s</code> ，请你找出其中不含有重复字符的 <strong>最长</strong> 子串的长度。</p><h2 id="💡-示例" tabindex="-1"><a class="header-anchor" href="#💡-示例"><span>💡 示例</span></a></h2><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例 1</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;abcabcbb&quot;</code></li><li><strong>输出</strong>: <code>3</code></li><li><strong>解释</strong>: 因为无重复字符的最长子串是 <code>&quot;abc&quot;</code>，所以其长度为 <code>3</code>。</li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例 2</span></a></h3><ul><li><strong>输入</strong>: <code>s = &quot;bbbbb&quot;</code></li><li><strong>输出</strong>: <code>1</code></li><li><strong>解释</strong>: 因为无重复字符的最长子串是 <code>&quot;b&quot;</code>，所以其长度为 <code>1</code>。</li></ul><h3 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3"><span>示例 3</span></a></h3><ul><li><p><strong>输入</strong>: <code>s = &quot;pwwkew&quot;</code></p></li><li><p><strong>输出</strong>: <code>3</code></p></li><li><p><strong>解释</strong>: 因为无重复字符的最长子串是 <code>&quot;wke&quot;</code>，所以其长度为 <code>3</code>。</p><p>请注意，你的答案必须是 <strong>子串</strong> 的长度，<code>&quot;pwke&quot;</code> 是一个子序列，不是子串。</p></li></ul><h2 id="📝-提示" tabindex="-1"><a class="header-anchor" href="#📝-提示"><span>📝 提示</span></a></h2><ul><li><code>0 &lt;= s.length &lt;= 5 * 10^4</code></li><li><code>s</code> 由英文字母、数字、符号和空格组成</li></ul><h2 id="💭-思路" tabindex="-1"><a class="header-anchor" href="#💭-思路"><span>💭 思路</span></a></h2><p>使用 <strong>滑动窗口</strong> 的思想来解决这个问题：</p><ol><li>维护一个窗口，窗口的左边界和右边界分别用 <code>l</code> 和 <code>r</code> 表示。</li><li>使用一个列表 <code>list</code> 来存储当前窗口中的字符。</li><li>遍历字符串 <code>s</code>，如果当前字符 <code>s[r]</code> 不在 <code>list</code> 中，则将其加入 <code>list</code> 并扩展右边界 <code>r</code>。</li><li>如果当前字符 <code>s[r]</code> 已经在 <code>list</code> 中，则移除 <code>list</code> 中的第一个字符并收缩左边界 <code>l</code>。</li><li>在每次扩展或收缩窗口时，记录窗口的最大长度。</li></ol><h2 id="💻-代码实现" tabindex="-1"><a class="header-anchor" href="#💻-代码实现"><span>💻 代码实现</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#4EC9B0;"> int</span><span style="color:#DCDCAA;"> lengthOfLongestSubstring</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> s) {</span></span>
<span class="line"><span style="color:#4EC9B0;">    List</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Character</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">new</span><span style="color:#4EC9B0;"> ArrayList</span><span style="color:#D4D4D4;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#4EC9B0;">    int</span><span style="color:#9CDCFE;"> l</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, r = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, ans = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">    while</span><span style="color:#D4D4D4;"> (l &lt;= r &amp;&amp; r &lt; </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">length</span><span style="color:#D4D4D4;">()) {</span></span>
<span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (l == r) {</span></span>
<span class="line"><span style="color:#9CDCFE;">            list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">add</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(l));</span></span>
<span class="line"><span style="color:#D4D4D4;">            ans = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(ans, </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">size</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;">            r++;</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#4EC9B0;">            Character</span><span style="color:#9CDCFE;"> c</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(r);</span></span>
<span class="line"><span style="color:#C586C0;">            if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">contains</span><span style="color:#D4D4D4;">(c)) {</span></span>
<span class="line"><span style="color:#9CDCFE;">                list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">removeFirst</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">                l++;</span></span>
<span class="line"><span style="color:#D4D4D4;">            } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">                list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">add</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(r));</span></span>
<span class="line"><span style="color:#D4D4D4;">                ans = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(ans, </span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">size</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;">                r++;</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> ans;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div>`,18)]))}const D=e(o,[["render",t]]),i=JSON.parse(`{"path":"/note/leet150/31-leet003.html","title":"3 无重复字符的最长子串","lang":"zh-CN","frontmatter":{"title":"3 无重复字符的最长子串","order":31,"category":["LeetCode"],"tag":["LeetCode面试经典150题","LeetCode3","中等题","滑动窗口"],"description":"🚀 相关链接 LeetCode 3 - 无重复字符的最长子串 📜 描述 给定一个字符串 s ，请你找出其中不含有重复字符的 最长 子串的长度。 💡 示例 示例 1 输入: s = \\"abcabcbb\\" 输出: 3 解释: 因为无重复字符的最长子串是 \\"abc\\"，所以其长度为 3。 示例 2 输入: s = \\"bbbbb\\" 输出: 1 解释: 因为...","head":[["meta",{"property":"og:url","content":"https://jayczee.cn/note/leet150/31-leet003.html"}],["meta",{"property":"og:site_name","content":"Jayczee's Blog"}],["meta",{"property":"og:title","content":"3 无重复字符的最长子串"}],["meta",{"property":"og:description","content":"🚀 相关链接 LeetCode 3 - 无重复字符的最长子串 📜 描述 给定一个字符串 s ，请你找出其中不含有重复字符的 最长 子串的长度。 💡 示例 示例 1 输入: s = \\"abcabcbb\\" 输出: 3 解释: 因为无重复字符的最长子串是 \\"abc\\"，所以其长度为 3。 示例 2 输入: s = \\"bbbbb\\" 输出: 1 解释: 因为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-27T07:51:43.000Z"}],["meta",{"property":"article:tag","content":"LeetCode面试经典150题"}],["meta",{"property":"article:tag","content":"LeetCode3"}],["meta",{"property":"article:tag","content":"中等题"}],["meta",{"property":"article:tag","content":"滑动窗口"}],["meta",{"property":"article:modified_time","content":"2025-05-27T07:51:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3 无重复字符的最长子串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-27T07:51:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jayczee\\",\\"url\\":\\"https://jayczee.cn\\"}]}"]]},"headers":[{"level":2,"title":"🚀 相关链接","slug":"🚀-相关链接","link":"#🚀-相关链接","children":[]},{"level":2,"title":"📜 描述","slug":"📜-描述","link":"#📜-描述","children":[]},{"level":2,"title":"💡 示例","slug":"💡-示例","link":"#💡-示例","children":[{"level":3,"title":"示例 1","slug":"示例-1","link":"#示例-1","children":[]},{"level":3,"title":"示例 2","slug":"示例-2","link":"#示例-2","children":[]},{"level":3,"title":"示例 3","slug":"示例-3","link":"#示例-3","children":[]}]},{"level":2,"title":"📝 提示","slug":"📝-提示","link":"#📝-提示","children":[]},{"level":2,"title":"💭 思路","slug":"💭-思路","link":"#💭-思路","children":[]},{"level":2,"title":"💻 代码实现","slug":"💻-代码实现","link":"#💻-代码实现","children":[]}],"git":{"createdTime":1748332303000,"updatedTime":1748332303000,"contributors":[{"name":"Jayczee","username":"Jayczee","email":"jayczee@yeah.net","commits":1,"url":"https://github.com/Jayczee"}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"note/leet150/31-leet003.md","localizedDate":"2025年5月27日","excerpt":"<h2>🚀 相关链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LeetCode 3 - 无重复字符的最长子串</a></p>\\n<h2>📜 描述</h2>\\n<p>给定一个字符串 <code>s</code> ，请你找出其中不含有重复字符的 <strong>最长</strong> 子串的长度。</p>","autoDesc":true}`);export{D as comp,i as data};
